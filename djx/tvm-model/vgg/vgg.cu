
#if defined(__CUDA_ARCH__) && (__CUDA_ARCH__ < 700)
#define __shfl_sync(mask, var, lane, width) \
        __shfl((var), (lane), (width))

#define __shfl_down_sync(mask, var, offset, width) \
        __shfl_down((var), (offset), (width))

#define __shfl_up_sync(mask, var, offset, width) \
        __shfl_up((var), (offset), (width))
#endif

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0(float* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps) < 29)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu) < 29)) ? placeholder[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 56) + (eps * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + nu) - 29))] : 0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 200704) + (nu1 * 50176)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_max_pool2d_kernel0(float* __restrict__ placeholder, float* __restrict__ tensor) {
  float tensor_local[1];
  tensor_local[(0)] = -3.402823e+38f;
  for (int dh = 0; dh < 2; ++dh) {
    for (int dw = 0; dw < 2; ++dw) {
      if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 25088) {
        tensor_local[(0)] = max(tensor_local[(0)], placeholder[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 7) * 28) + (dh * 14)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 7) * 2)) + dw))]);
      }
    }
  }
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 25088) {
    tensor[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = tensor_local[(0)];
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2(float* __restrict__ bgemm, float* __restrict__ T_relu, float* __restrict__ placeholder) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((int)blockIdx.x) * 128) + ((int)threadIdx.x)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      T_relu[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 56) + (ax2_inner * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + ax3_inner))] = max((inverse[(((ax2_inner * 2) + ax3_inner))] + placeholder[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 196))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_dense_add_nn_relu_1_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float T_dense_rf[1];
  __shared__ float red_buf0[64];
  __shared__ float T_dense[1];
  T_dense_rf[(0)] = 0.000000e+00f;
  for (int k_outer = 0; k_outer < 392; ++k_outer) {
    T_dense_rf[(0)] = (T_dense_rf[(0)] + (placeholder[(((k_outer * 64) + ((int)threadIdx.x)))] * placeholder1[((((((int)blockIdx.x) * 25088) + (k_outer * 64)) + ((int)threadIdx.x)))]));
  }
  __syncthreads();
  ((volatile float*)red_buf0)[(((int)threadIdx.x))] = T_dense_rf[(0)];
  __syncthreads();
  if (((int)threadIdx.x) < 32) {
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 32))]);
  }
  __syncthreads();
  if (((int)threadIdx.x) < 16) {
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 16))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 8))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 4))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 2))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 1))]);
  }
  __syncthreads();
  if (((int)threadIdx.x) == 0) {
    T_dense[(0)] = ((volatile float*)red_buf0)[(0)];
  }
  if (((int)threadIdx.x) == 0) {
    T_relu[(((int)blockIdx.x))] = max((T_dense[(0)] + placeholder2[(((int)blockIdx.x))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_nn_max_pool2d_3_kernel0(float* __restrict__ placeholder, float* __restrict__ tensor) {
  float tensor_local[1];
  tensor_local[(0)] = -3.402823e+38f;
  for (int dh = 0; dh < 2; ++dh) {
    for (int dw = 0; dw < 2; ++dw) {
      tensor_local[(0)] = max(tensor_local[(0)], placeholder[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 56) * 224) + (dh * 112)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 56) * 2)) + dw))]);
    }
  }
  tensor[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = tensor_local[(0)];
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5_kernel1(float* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[56];
  __shared__ float placeholder_shared[512];
  __shared__ float data_pack_shared[896];
  bgemm_local[(0)] = 0.000000e+00f;
  bgemm_local[(14)] = 0.000000e+00f;
  bgemm_local[(28)] = 0.000000e+00f;
  bgemm_local[(42)] = 0.000000e+00f;
  bgemm_local[(2)] = 0.000000e+00f;
  bgemm_local[(16)] = 0.000000e+00f;
  bgemm_local[(30)] = 0.000000e+00f;
  bgemm_local[(44)] = 0.000000e+00f;
  bgemm_local[(4)] = 0.000000e+00f;
  bgemm_local[(18)] = 0.000000e+00f;
  bgemm_local[(32)] = 0.000000e+00f;
  bgemm_local[(46)] = 0.000000e+00f;
  bgemm_local[(6)] = 0.000000e+00f;
  bgemm_local[(20)] = 0.000000e+00f;
  bgemm_local[(34)] = 0.000000e+00f;
  bgemm_local[(48)] = 0.000000e+00f;
  bgemm_local[(8)] = 0.000000e+00f;
  bgemm_local[(22)] = 0.000000e+00f;
  bgemm_local[(36)] = 0.000000e+00f;
  bgemm_local[(50)] = 0.000000e+00f;
  bgemm_local[(10)] = 0.000000e+00f;
  bgemm_local[(24)] = 0.000000e+00f;
  bgemm_local[(38)] = 0.000000e+00f;
  bgemm_local[(52)] = 0.000000e+00f;
  bgemm_local[(12)] = 0.000000e+00f;
  bgemm_local[(26)] = 0.000000e+00f;
  bgemm_local[(40)] = 0.000000e+00f;
  bgemm_local[(54)] = 0.000000e+00f;
  bgemm_local[(1)] = 0.000000e+00f;
  bgemm_local[(15)] = 0.000000e+00f;
  bgemm_local[(29)] = 0.000000e+00f;
  bgemm_local[(43)] = 0.000000e+00f;
  bgemm_local[(3)] = 0.000000e+00f;
  bgemm_local[(17)] = 0.000000e+00f;
  bgemm_local[(31)] = 0.000000e+00f;
  bgemm_local[(45)] = 0.000000e+00f;
  bgemm_local[(5)] = 0.000000e+00f;
  bgemm_local[(19)] = 0.000000e+00f;
  bgemm_local[(33)] = 0.000000e+00f;
  bgemm_local[(47)] = 0.000000e+00f;
  bgemm_local[(7)] = 0.000000e+00f;
  bgemm_local[(21)] = 0.000000e+00f;
  bgemm_local[(35)] = 0.000000e+00f;
  bgemm_local[(49)] = 0.000000e+00f;
  bgemm_local[(9)] = 0.000000e+00f;
  bgemm_local[(23)] = 0.000000e+00f;
  bgemm_local[(37)] = 0.000000e+00f;
  bgemm_local[(51)] = 0.000000e+00f;
  bgemm_local[(11)] = 0.000000e+00f;
  bgemm_local[(25)] = 0.000000e+00f;
  bgemm_local[(39)] = 0.000000e+00f;
  bgemm_local[(53)] = 0.000000e+00f;
  bgemm_local[(13)] = 0.000000e+00f;
  bgemm_local[(27)] = 0.000000e+00f;
  bgemm_local[(41)] = 0.000000e+00f;
  bgemm_local[(55)] = 0.000000e+00f;
  for (int ci_outer = 0; ci_outer < 16; ++ci_outer) {
    __syncthreads();
    placeholder_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)))] = placeholder[((((((((int)blockIdx.z) * 16384) + (ci_outer * 1024)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 128)) + (((int)blockIdx.y) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)))];
    placeholder_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128))] = placeholder[(((((((((int)blockIdx.z) * 16384) + (ci_outer * 1024)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 128)) + (((int)blockIdx.y) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)) + 256))];
    placeholder_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256))] = placeholder[(((((((((int)blockIdx.z) * 16384) + (ci_outer * 1024)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 128)) + (((int)blockIdx.y) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)) + 512))];
    placeholder_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384))] = placeholder[(((((((((int)blockIdx.z) * 16384) + (ci_outer * 1024)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 128)) + (((int)blockIdx.y) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)) + 768))];
    data_pack_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 100352) + (ci_outer * 6272)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) / 112) * 784)) + (((int)blockIdx.x) * 112)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128))] = data_pack[((((((((int)blockIdx.z) * 100352) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 16) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256))] = data_pack[((((((((int)blockIdx.z) * 100352) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384))] = data_pack[((((((((int)blockIdx.z) * 100352) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 48) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512))] = data_pack[((((((((int)blockIdx.z) * 100352) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640))] = data_pack[((((((((int)blockIdx.z) * 100352) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 80) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768))] = data_pack[((((((((int)blockIdx.z) * 100352) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96) % 112)))];
    __syncthreads();
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[((((int)threadIdx.y) * 2))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 16))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 32))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 48))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[((((int)threadIdx.y) * 2))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 16))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 32))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 48))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[((((int)threadIdx.y) * 2))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 16))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 32))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 48))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[((((int)threadIdx.y) * 2))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 16))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 32))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 48))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[((((int)threadIdx.y) * 2))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 16))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 32))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 48))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[((((int)threadIdx.y) * 2))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 16))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 32))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 48))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[((((int)threadIdx.y) * 2))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 16))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 32))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 48))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 1))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 17))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 33))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 49))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 1))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 17))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 33))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 49))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 1))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 17))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 33))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 49))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 1))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 17))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 33))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 49))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 1))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 17))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 33))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 49))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 1))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 17))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 33))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 49))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 1))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 17))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 33))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 49))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 64))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 80))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 96))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 112))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 64))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 80))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 96))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 112))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 64))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 80))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 96))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 112))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 64))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 80))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 96))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 112))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 64))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 80))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 96))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 112))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 64))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 80))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 96))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 112))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 64))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 80))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 96))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 112))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 65))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 81))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 97))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 113))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 65))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 81))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 97))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 113))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 65))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 81))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 97))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 113))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 65))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 81))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 97))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 113))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 65))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 81))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 97))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 113))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 65))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 81))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 97))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 113))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 65))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 81))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 97))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 113))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 128))] * data_pack_shared[((((int)threadIdx.x) + 224))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 144))] * data_pack_shared[((((int)threadIdx.x) + 224))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 160))] * data_pack_shared[((((int)threadIdx.x) + 224))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 176))] * data_pack_shared[((((int)threadIdx.x) + 224))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 128))] * data_pack_shared[((((int)threadIdx.x) + 240))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 144))] * data_pack_shared[((((int)threadIdx.x) + 240))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 160))] * data_pack_shared[((((int)threadIdx.x) + 240))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 176))] * data_pack_shared[((((int)threadIdx.x) + 240))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 128))] * data_pack_shared[((((int)threadIdx.x) + 256))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 144))] * data_pack_shared[((((int)threadIdx.x) + 256))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 160))] * data_pack_shared[((((int)threadIdx.x) + 256))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 176))] * data_pack_shared[((((int)threadIdx.x) + 256))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 128))] * data_pack_shared[((((int)threadIdx.x) + 272))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 144))] * data_pack_shared[((((int)threadIdx.x) + 272))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 160))] * data_pack_shared[((((int)threadIdx.x) + 272))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 176))] * data_pack_shared[((((int)threadIdx.x) + 272))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 128))] * data_pack_shared[((((int)threadIdx.x) + 288))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 144))] * data_pack_shared[((((int)threadIdx.x) + 288))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 160))] * data_pack_shared[((((int)threadIdx.x) + 288))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 176))] * data_pack_shared[((((int)threadIdx.x) + 288))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 128))] * data_pack_shared[((((int)threadIdx.x) + 304))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 144))] * data_pack_shared[((((int)threadIdx.x) + 304))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 160))] * data_pack_shared[((((int)threadIdx.x) + 304))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 176))] * data_pack_shared[((((int)threadIdx.x) + 304))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 128))] * data_pack_shared[((((int)threadIdx.x) + 320))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 144))] * data_pack_shared[((((int)threadIdx.x) + 320))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 160))] * data_pack_shared[((((int)threadIdx.x) + 320))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 176))] * data_pack_shared[((((int)threadIdx.x) + 320))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 129))] * data_pack_shared[((((int)threadIdx.x) + 224))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 145))] * data_pack_shared[((((int)threadIdx.x) + 224))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 161))] * data_pack_shared[((((int)threadIdx.x) + 224))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 177))] * data_pack_shared[((((int)threadIdx.x) + 224))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 129))] * data_pack_shared[((((int)threadIdx.x) + 240))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 145))] * data_pack_shared[((((int)threadIdx.x) + 240))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 161))] * data_pack_shared[((((int)threadIdx.x) + 240))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 177))] * data_pack_shared[((((int)threadIdx.x) + 240))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 129))] * data_pack_shared[((((int)threadIdx.x) + 256))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 145))] * data_pack_shared[((((int)threadIdx.x) + 256))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 161))] * data_pack_shared[((((int)threadIdx.x) + 256))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 177))] * data_pack_shared[((((int)threadIdx.x) + 256))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 129))] * data_pack_shared[((((int)threadIdx.x) + 272))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 145))] * data_pack_shared[((((int)threadIdx.x) + 272))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 161))] * data_pack_shared[((((int)threadIdx.x) + 272))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 177))] * data_pack_shared[((((int)threadIdx.x) + 272))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 129))] * data_pack_shared[((((int)threadIdx.x) + 288))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 145))] * data_pack_shared[((((int)threadIdx.x) + 288))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 161))] * data_pack_shared[((((int)threadIdx.x) + 288))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 177))] * data_pack_shared[((((int)threadIdx.x) + 288))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 129))] * data_pack_shared[((((int)threadIdx.x) + 304))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 145))] * data_pack_shared[((((int)threadIdx.x) + 304))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 161))] * data_pack_shared[((((int)threadIdx.x) + 304))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 177))] * data_pack_shared[((((int)threadIdx.x) + 304))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 129))] * data_pack_shared[((((int)threadIdx.x) + 320))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 145))] * data_pack_shared[((((int)threadIdx.x) + 320))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 161))] * data_pack_shared[((((int)threadIdx.x) + 320))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 177))] * data_pack_shared[((((int)threadIdx.x) + 320))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 192))] * data_pack_shared[((((int)threadIdx.x) + 336))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 208))] * data_pack_shared[((((int)threadIdx.x) + 336))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 224))] * data_pack_shared[((((int)threadIdx.x) + 336))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 240))] * data_pack_shared[((((int)threadIdx.x) + 336))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 192))] * data_pack_shared[((((int)threadIdx.x) + 352))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 208))] * data_pack_shared[((((int)threadIdx.x) + 352))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 224))] * data_pack_shared[((((int)threadIdx.x) + 352))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 240))] * data_pack_shared[((((int)threadIdx.x) + 352))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 192))] * data_pack_shared[((((int)threadIdx.x) + 368))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 208))] * data_pack_shared[((((int)threadIdx.x) + 368))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 224))] * data_pack_shared[((((int)threadIdx.x) + 368))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 240))] * data_pack_shared[((((int)threadIdx.x) + 368))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 192))] * data_pack_shared[((((int)threadIdx.x) + 384))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 208))] * data_pack_shared[((((int)threadIdx.x) + 384))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 224))] * data_pack_shared[((((int)threadIdx.x) + 384))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 240))] * data_pack_shared[((((int)threadIdx.x) + 384))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 192))] * data_pack_shared[((((int)threadIdx.x) + 400))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 208))] * data_pack_shared[((((int)threadIdx.x) + 400))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 224))] * data_pack_shared[((((int)threadIdx.x) + 400))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 240))] * data_pack_shared[((((int)threadIdx.x) + 400))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 192))] * data_pack_shared[((((int)threadIdx.x) + 416))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 208))] * data_pack_shared[((((int)threadIdx.x) + 416))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 224))] * data_pack_shared[((((int)threadIdx.x) + 416))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 240))] * data_pack_shared[((((int)threadIdx.x) + 416))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 192))] * data_pack_shared[((((int)threadIdx.x) + 432))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 208))] * data_pack_shared[((((int)threadIdx.x) + 432))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 224))] * data_pack_shared[((((int)threadIdx.x) + 432))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 240))] * data_pack_shared[((((int)threadIdx.x) + 432))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 193))] * data_pack_shared[((((int)threadIdx.x) + 336))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 209))] * data_pack_shared[((((int)threadIdx.x) + 336))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 225))] * data_pack_shared[((((int)threadIdx.x) + 336))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 241))] * data_pack_shared[((((int)threadIdx.x) + 336))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 193))] * data_pack_shared[((((int)threadIdx.x) + 352))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 209))] * data_pack_shared[((((int)threadIdx.x) + 352))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 225))] * data_pack_shared[((((int)threadIdx.x) + 352))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 241))] * data_pack_shared[((((int)threadIdx.x) + 352))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 193))] * data_pack_shared[((((int)threadIdx.x) + 368))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 209))] * data_pack_shared[((((int)threadIdx.x) + 368))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 225))] * data_pack_shared[((((int)threadIdx.x) + 368))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 241))] * data_pack_shared[((((int)threadIdx.x) + 368))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 193))] * data_pack_shared[((((int)threadIdx.x) + 384))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 209))] * data_pack_shared[((((int)threadIdx.x) + 384))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 225))] * data_pack_shared[((((int)threadIdx.x) + 384))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 241))] * data_pack_shared[((((int)threadIdx.x) + 384))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 193))] * data_pack_shared[((((int)threadIdx.x) + 400))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 209))] * data_pack_shared[((((int)threadIdx.x) + 400))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 225))] * data_pack_shared[((((int)threadIdx.x) + 400))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 241))] * data_pack_shared[((((int)threadIdx.x) + 400))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 193))] * data_pack_shared[((((int)threadIdx.x) + 416))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 209))] * data_pack_shared[((((int)threadIdx.x) + 416))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 225))] * data_pack_shared[((((int)threadIdx.x) + 416))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 241))] * data_pack_shared[((((int)threadIdx.x) + 416))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 193))] * data_pack_shared[((((int)threadIdx.x) + 432))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 209))] * data_pack_shared[((((int)threadIdx.x) + 432))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 225))] * data_pack_shared[((((int)threadIdx.x) + 432))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 241))] * data_pack_shared[((((int)threadIdx.x) + 432))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 256))] * data_pack_shared[((((int)threadIdx.x) + 448))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 272))] * data_pack_shared[((((int)threadIdx.x) + 448))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 288))] * data_pack_shared[((((int)threadIdx.x) + 448))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 304))] * data_pack_shared[((((int)threadIdx.x) + 448))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 256))] * data_pack_shared[((((int)threadIdx.x) + 464))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 272))] * data_pack_shared[((((int)threadIdx.x) + 464))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 288))] * data_pack_shared[((((int)threadIdx.x) + 464))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 304))] * data_pack_shared[((((int)threadIdx.x) + 464))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 256))] * data_pack_shared[((((int)threadIdx.x) + 480))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 272))] * data_pack_shared[((((int)threadIdx.x) + 480))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 288))] * data_pack_shared[((((int)threadIdx.x) + 480))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 304))] * data_pack_shared[((((int)threadIdx.x) + 480))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 256))] * data_pack_shared[((((int)threadIdx.x) + 496))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 272))] * data_pack_shared[((((int)threadIdx.x) + 496))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 288))] * data_pack_shared[((((int)threadIdx.x) + 496))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 304))] * data_pack_shared[((((int)threadIdx.x) + 496))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 256))] * data_pack_shared[((((int)threadIdx.x) + 512))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 272))] * data_pack_shared[((((int)threadIdx.x) + 512))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 288))] * data_pack_shared[((((int)threadIdx.x) + 512))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 304))] * data_pack_shared[((((int)threadIdx.x) + 512))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 256))] * data_pack_shared[((((int)threadIdx.x) + 528))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 272))] * data_pack_shared[((((int)threadIdx.x) + 528))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 288))] * data_pack_shared[((((int)threadIdx.x) + 528))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 304))] * data_pack_shared[((((int)threadIdx.x) + 528))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 256))] * data_pack_shared[((((int)threadIdx.x) + 544))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 272))] * data_pack_shared[((((int)threadIdx.x) + 544))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 288))] * data_pack_shared[((((int)threadIdx.x) + 544))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 304))] * data_pack_shared[((((int)threadIdx.x) + 544))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 257))] * data_pack_shared[((((int)threadIdx.x) + 448))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 273))] * data_pack_shared[((((int)threadIdx.x) + 448))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 289))] * data_pack_shared[((((int)threadIdx.x) + 448))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 305))] * data_pack_shared[((((int)threadIdx.x) + 448))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 257))] * data_pack_shared[((((int)threadIdx.x) + 464))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 273))] * data_pack_shared[((((int)threadIdx.x) + 464))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 289))] * data_pack_shared[((((int)threadIdx.x) + 464))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 305))] * data_pack_shared[((((int)threadIdx.x) + 464))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 257))] * data_pack_shared[((((int)threadIdx.x) + 480))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 273))] * data_pack_shared[((((int)threadIdx.x) + 480))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 289))] * data_pack_shared[((((int)threadIdx.x) + 480))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 305))] * data_pack_shared[((((int)threadIdx.x) + 480))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 257))] * data_pack_shared[((((int)threadIdx.x) + 496))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 273))] * data_pack_shared[((((int)threadIdx.x) + 496))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 289))] * data_pack_shared[((((int)threadIdx.x) + 496))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 305))] * data_pack_shared[((((int)threadIdx.x) + 496))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 257))] * data_pack_shared[((((int)threadIdx.x) + 512))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 273))] * data_pack_shared[((((int)threadIdx.x) + 512))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 289))] * data_pack_shared[((((int)threadIdx.x) + 512))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 305))] * data_pack_shared[((((int)threadIdx.x) + 512))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 257))] * data_pack_shared[((((int)threadIdx.x) + 528))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 273))] * data_pack_shared[((((int)threadIdx.x) + 528))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 289))] * data_pack_shared[((((int)threadIdx.x) + 528))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 305))] * data_pack_shared[((((int)threadIdx.x) + 528))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 257))] * data_pack_shared[((((int)threadIdx.x) + 544))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 273))] * data_pack_shared[((((int)threadIdx.x) + 544))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 289))] * data_pack_shared[((((int)threadIdx.x) + 544))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 305))] * data_pack_shared[((((int)threadIdx.x) + 544))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 320))] * data_pack_shared[((((int)threadIdx.x) + 560))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 336))] * data_pack_shared[((((int)threadIdx.x) + 560))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 352))] * data_pack_shared[((((int)threadIdx.x) + 560))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 368))] * data_pack_shared[((((int)threadIdx.x) + 560))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 320))] * data_pack_shared[((((int)threadIdx.x) + 576))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 336))] * data_pack_shared[((((int)threadIdx.x) + 576))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 352))] * data_pack_shared[((((int)threadIdx.x) + 576))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 368))] * data_pack_shared[((((int)threadIdx.x) + 576))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 320))] * data_pack_shared[((((int)threadIdx.x) + 592))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 336))] * data_pack_shared[((((int)threadIdx.x) + 592))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 352))] * data_pack_shared[((((int)threadIdx.x) + 592))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 368))] * data_pack_shared[((((int)threadIdx.x) + 592))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 320))] * data_pack_shared[((((int)threadIdx.x) + 608))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 336))] * data_pack_shared[((((int)threadIdx.x) + 608))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 352))] * data_pack_shared[((((int)threadIdx.x) + 608))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 368))] * data_pack_shared[((((int)threadIdx.x) + 608))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 320))] * data_pack_shared[((((int)threadIdx.x) + 624))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 336))] * data_pack_shared[((((int)threadIdx.x) + 624))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 352))] * data_pack_shared[((((int)threadIdx.x) + 624))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 368))] * data_pack_shared[((((int)threadIdx.x) + 624))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 320))] * data_pack_shared[((((int)threadIdx.x) + 640))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 336))] * data_pack_shared[((((int)threadIdx.x) + 640))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 352))] * data_pack_shared[((((int)threadIdx.x) + 640))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 368))] * data_pack_shared[((((int)threadIdx.x) + 640))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 320))] * data_pack_shared[((((int)threadIdx.x) + 656))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 336))] * data_pack_shared[((((int)threadIdx.x) + 656))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 352))] * data_pack_shared[((((int)threadIdx.x) + 656))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 368))] * data_pack_shared[((((int)threadIdx.x) + 656))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 321))] * data_pack_shared[((((int)threadIdx.x) + 560))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 337))] * data_pack_shared[((((int)threadIdx.x) + 560))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 353))] * data_pack_shared[((((int)threadIdx.x) + 560))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 369))] * data_pack_shared[((((int)threadIdx.x) + 560))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 321))] * data_pack_shared[((((int)threadIdx.x) + 576))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 337))] * data_pack_shared[((((int)threadIdx.x) + 576))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 353))] * data_pack_shared[((((int)threadIdx.x) + 576))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 369))] * data_pack_shared[((((int)threadIdx.x) + 576))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 321))] * data_pack_shared[((((int)threadIdx.x) + 592))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 337))] * data_pack_shared[((((int)threadIdx.x) + 592))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 353))] * data_pack_shared[((((int)threadIdx.x) + 592))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 369))] * data_pack_shared[((((int)threadIdx.x) + 592))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 321))] * data_pack_shared[((((int)threadIdx.x) + 608))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 337))] * data_pack_shared[((((int)threadIdx.x) + 608))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 353))] * data_pack_shared[((((int)threadIdx.x) + 608))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 369))] * data_pack_shared[((((int)threadIdx.x) + 608))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 321))] * data_pack_shared[((((int)threadIdx.x) + 624))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 337))] * data_pack_shared[((((int)threadIdx.x) + 624))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 353))] * data_pack_shared[((((int)threadIdx.x) + 624))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 369))] * data_pack_shared[((((int)threadIdx.x) + 624))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 321))] * data_pack_shared[((((int)threadIdx.x) + 640))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 337))] * data_pack_shared[((((int)threadIdx.x) + 640))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 353))] * data_pack_shared[((((int)threadIdx.x) + 640))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 369))] * data_pack_shared[((((int)threadIdx.x) + 640))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 321))] * data_pack_shared[((((int)threadIdx.x) + 656))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 337))] * data_pack_shared[((((int)threadIdx.x) + 656))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 353))] * data_pack_shared[((((int)threadIdx.x) + 656))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 369))] * data_pack_shared[((((int)threadIdx.x) + 656))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 384))] * data_pack_shared[((((int)threadIdx.x) + 672))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 400))] * data_pack_shared[((((int)threadIdx.x) + 672))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 416))] * data_pack_shared[((((int)threadIdx.x) + 672))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 432))] * data_pack_shared[((((int)threadIdx.x) + 672))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 384))] * data_pack_shared[((((int)threadIdx.x) + 688))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 400))] * data_pack_shared[((((int)threadIdx.x) + 688))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 416))] * data_pack_shared[((((int)threadIdx.x) + 688))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 432))] * data_pack_shared[((((int)threadIdx.x) + 688))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 384))] * data_pack_shared[((((int)threadIdx.x) + 704))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 400))] * data_pack_shared[((((int)threadIdx.x) + 704))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 416))] * data_pack_shared[((((int)threadIdx.x) + 704))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 432))] * data_pack_shared[((((int)threadIdx.x) + 704))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 384))] * data_pack_shared[((((int)threadIdx.x) + 720))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 400))] * data_pack_shared[((((int)threadIdx.x) + 720))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 416))] * data_pack_shared[((((int)threadIdx.x) + 720))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 432))] * data_pack_shared[((((int)threadIdx.x) + 720))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 384))] * data_pack_shared[((((int)threadIdx.x) + 736))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 400))] * data_pack_shared[((((int)threadIdx.x) + 736))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 416))] * data_pack_shared[((((int)threadIdx.x) + 736))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 432))] * data_pack_shared[((((int)threadIdx.x) + 736))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 384))] * data_pack_shared[((((int)threadIdx.x) + 752))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 400))] * data_pack_shared[((((int)threadIdx.x) + 752))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 416))] * data_pack_shared[((((int)threadIdx.x) + 752))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 432))] * data_pack_shared[((((int)threadIdx.x) + 752))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 384))] * data_pack_shared[((((int)threadIdx.x) + 768))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 400))] * data_pack_shared[((((int)threadIdx.x) + 768))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 416))] * data_pack_shared[((((int)threadIdx.x) + 768))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 432))] * data_pack_shared[((((int)threadIdx.x) + 768))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 385))] * data_pack_shared[((((int)threadIdx.x) + 672))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 401))] * data_pack_shared[((((int)threadIdx.x) + 672))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 417))] * data_pack_shared[((((int)threadIdx.x) + 672))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 433))] * data_pack_shared[((((int)threadIdx.x) + 672))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 385))] * data_pack_shared[((((int)threadIdx.x) + 688))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 401))] * data_pack_shared[((((int)threadIdx.x) + 688))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 417))] * data_pack_shared[((((int)threadIdx.x) + 688))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 433))] * data_pack_shared[((((int)threadIdx.x) + 688))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 385))] * data_pack_shared[((((int)threadIdx.x) + 704))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 401))] * data_pack_shared[((((int)threadIdx.x) + 704))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 417))] * data_pack_shared[((((int)threadIdx.x) + 704))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 433))] * data_pack_shared[((((int)threadIdx.x) + 704))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 385))] * data_pack_shared[((((int)threadIdx.x) + 720))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 401))] * data_pack_shared[((((int)threadIdx.x) + 720))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 417))] * data_pack_shared[((((int)threadIdx.x) + 720))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 433))] * data_pack_shared[((((int)threadIdx.x) + 720))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 385))] * data_pack_shared[((((int)threadIdx.x) + 736))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 401))] * data_pack_shared[((((int)threadIdx.x) + 736))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 417))] * data_pack_shared[((((int)threadIdx.x) + 736))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 433))] * data_pack_shared[((((int)threadIdx.x) + 736))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 385))] * data_pack_shared[((((int)threadIdx.x) + 752))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 401))] * data_pack_shared[((((int)threadIdx.x) + 752))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 417))] * data_pack_shared[((((int)threadIdx.x) + 752))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 433))] * data_pack_shared[((((int)threadIdx.x) + 752))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 385))] * data_pack_shared[((((int)threadIdx.x) + 768))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 401))] * data_pack_shared[((((int)threadIdx.x) + 768))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 417))] * data_pack_shared[((((int)threadIdx.x) + 768))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 433))] * data_pack_shared[((((int)threadIdx.x) + 768))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 448))] * data_pack_shared[((((int)threadIdx.x) + 784))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 464))] * data_pack_shared[((((int)threadIdx.x) + 784))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 480))] * data_pack_shared[((((int)threadIdx.x) + 784))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 496))] * data_pack_shared[((((int)threadIdx.x) + 784))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 448))] * data_pack_shared[((((int)threadIdx.x) + 800))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 464))] * data_pack_shared[((((int)threadIdx.x) + 800))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 480))] * data_pack_shared[((((int)threadIdx.x) + 800))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 496))] * data_pack_shared[((((int)threadIdx.x) + 800))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 448))] * data_pack_shared[((((int)threadIdx.x) + 816))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 464))] * data_pack_shared[((((int)threadIdx.x) + 816))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 480))] * data_pack_shared[((((int)threadIdx.x) + 816))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 496))] * data_pack_shared[((((int)threadIdx.x) + 816))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 448))] * data_pack_shared[((((int)threadIdx.x) + 832))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 464))] * data_pack_shared[((((int)threadIdx.x) + 832))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 480))] * data_pack_shared[((((int)threadIdx.x) + 832))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 496))] * data_pack_shared[((((int)threadIdx.x) + 832))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 448))] * data_pack_shared[((((int)threadIdx.x) + 848))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 464))] * data_pack_shared[((((int)threadIdx.x) + 848))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 480))] * data_pack_shared[((((int)threadIdx.x) + 848))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 496))] * data_pack_shared[((((int)threadIdx.x) + 848))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 448))] * data_pack_shared[((((int)threadIdx.x) + 864))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 464))] * data_pack_shared[((((int)threadIdx.x) + 864))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 480))] * data_pack_shared[((((int)threadIdx.x) + 864))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 496))] * data_pack_shared[((((int)threadIdx.x) + 864))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 448))] * data_pack_shared[((((int)threadIdx.x) + 880))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 464))] * data_pack_shared[((((int)threadIdx.x) + 880))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 480))] * data_pack_shared[((((int)threadIdx.x) + 880))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 496))] * data_pack_shared[((((int)threadIdx.x) + 880))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 449))] * data_pack_shared[((((int)threadIdx.x) + 784))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 465))] * data_pack_shared[((((int)threadIdx.x) + 784))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 481))] * data_pack_shared[((((int)threadIdx.x) + 784))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 497))] * data_pack_shared[((((int)threadIdx.x) + 784))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 449))] * data_pack_shared[((((int)threadIdx.x) + 800))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 465))] * data_pack_shared[((((int)threadIdx.x) + 800))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 481))] * data_pack_shared[((((int)threadIdx.x) + 800))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 497))] * data_pack_shared[((((int)threadIdx.x) + 800))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 449))] * data_pack_shared[((((int)threadIdx.x) + 816))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 465))] * data_pack_shared[((((int)threadIdx.x) + 816))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 481))] * data_pack_shared[((((int)threadIdx.x) + 816))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 497))] * data_pack_shared[((((int)threadIdx.x) + 816))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 449))] * data_pack_shared[((((int)threadIdx.x) + 832))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 465))] * data_pack_shared[((((int)threadIdx.x) + 832))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 481))] * data_pack_shared[((((int)threadIdx.x) + 832))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 497))] * data_pack_shared[((((int)threadIdx.x) + 832))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 449))] * data_pack_shared[((((int)threadIdx.x) + 848))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 465))] * data_pack_shared[((((int)threadIdx.x) + 848))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 481))] * data_pack_shared[((((int)threadIdx.x) + 848))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 497))] * data_pack_shared[((((int)threadIdx.x) + 848))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 449))] * data_pack_shared[((((int)threadIdx.x) + 864))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 465))] * data_pack_shared[((((int)threadIdx.x) + 864))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 481))] * data_pack_shared[((((int)threadIdx.x) + 864))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 497))] * data_pack_shared[((((int)threadIdx.x) + 864))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 449))] * data_pack_shared[((((int)threadIdx.x) + 880))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 465))] * data_pack_shared[((((int)threadIdx.x) + 880))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 481))] * data_pack_shared[((((int)threadIdx.x) + 880))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 2) + 497))] * data_pack_shared[((((int)threadIdx.x) + 880))]));
  }
  bgemm[((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)))] = bgemm_local[(0)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12544))] = bgemm_local[(14)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25088))] = bgemm_local[(28)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37632))] = bgemm_local[(42)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 16))] = bgemm_local[(2)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12560))] = bgemm_local[(16)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25104))] = bgemm_local[(30)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37648))] = bgemm_local[(44)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 32))] = bgemm_local[(4)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12576))] = bgemm_local[(18)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25120))] = bgemm_local[(32)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37664))] = bgemm_local[(46)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 48))] = bgemm_local[(6)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12592))] = bgemm_local[(20)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25136))] = bgemm_local[(34)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37680))] = bgemm_local[(48)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 64))] = bgemm_local[(8)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12608))] = bgemm_local[(22)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25152))] = bgemm_local[(36)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37696))] = bgemm_local[(50)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 80))] = bgemm_local[(10)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12624))] = bgemm_local[(24)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25168))] = bgemm_local[(38)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37712))] = bgemm_local[(52)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 96))] = bgemm_local[(12)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12640))] = bgemm_local[(26)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25184))] = bgemm_local[(40)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37728))] = bgemm_local[(54)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 784))] = bgemm_local[(1)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13328))] = bgemm_local[(15)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25872))] = bgemm_local[(29)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38416))] = bgemm_local[(43)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 800))] = bgemm_local[(3)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13344))] = bgemm_local[(17)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25888))] = bgemm_local[(31)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38432))] = bgemm_local[(45)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 816))] = bgemm_local[(5)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13360))] = bgemm_local[(19)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25904))] = bgemm_local[(33)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38448))] = bgemm_local[(47)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 832))] = bgemm_local[(7)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13376))] = bgemm_local[(21)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25920))] = bgemm_local[(35)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38464))] = bgemm_local[(49)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 848))] = bgemm_local[(9)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13392))] = bgemm_local[(23)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25936))] = bgemm_local[(37)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38480))] = bgemm_local[(51)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 864))] = bgemm_local[(11)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13408))] = bgemm_local[(25)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25952))] = bgemm_local[(39)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38496))] = bgemm_local[(53)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 880))] = bgemm_local[(13)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13424))] = bgemm_local[(27)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25968))] = bgemm_local[(41)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38512))] = bgemm_local[(55)];
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_7_kernel2(float* __restrict__ bgemm, float* __restrict__ T_relu, float* __restrict__ placeholder) {
  float inverse[16];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((int)blockIdx.x) * 128) + ((int)threadIdx.x)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3612672))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4816896))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -2.000000e+00f));
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * 4.000000e+00f));
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4616192))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5820416))]);
  inverse[(4)] = 0.000000e+00f;
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3612672))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4816896))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -2.000000e+00f));
  inverse[(5)] = 0.000000e+00f;
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 5.000000e-01f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 5.000000e-01f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * -2.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -2.000000e+00f) * -2.000000e+00f));
  inverse[(6)] = 0.000000e+00f;
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 5.000000e-01f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 5.000000e-01f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * -2.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -2.000000e+00f) * 4.000000e+00f));
  inverse[(7)] = 0.000000e+00f;
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))]);
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 5.000000e-01f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 5.000000e-01f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4616192))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * -2.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * -2.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -2.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5820416))] * -2.000000e+00f));
  inverse[(8)] = 0.000000e+00f;
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3612672))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4816896))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * 4.000000e+00f));
  inverse[(9)] = 0.000000e+00f;
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 2.500000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 2.500000e-01f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 2.500000e-01f) * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * 4.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * 4.000000e+00f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * 4.000000e+00f) * -2.000000e+00f));
  inverse[(10)] = 0.000000e+00f;
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 2.500000e-01f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 2.500000e-01f) * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * 4.000000e+00f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * 4.000000e+00f) * 4.000000e+00f));
  inverse[(11)] = 0.000000e+00f;
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))]);
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 2.500000e-01f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 2.500000e-01f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4616192))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * 4.000000e+00f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * 4.000000e+00f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * 4.000000e+00f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5820416))] * 4.000000e+00f));
  inverse[(12)] = 0.000000e+00f;
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3612672))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4816896))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6021120))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6221824))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6422528))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6623232))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6823936))]);
  inverse[(13)] = 0.000000e+00f;
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 1.250000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 1.250000e-01f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 1.250000e-01f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * -8.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * -8.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -8.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6221824))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6422528))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6623232))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6823936))] * -2.000000e+00f));
  inverse[(14)] = 0.000000e+00f;
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 1.250000e-01f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 1.250000e-01f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * -8.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -8.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6221824))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6422528))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6623232))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6823936))] * 4.000000e+00f));
  inverse[(15)] = 0.000000e+00f;
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))]);
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3813376))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4014080))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4214784))] * 1.250000e-01f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4415488))] * 1.250000e-01f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 4616192))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5017600))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5218304))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5419008))] * -8.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5619712))] * -8.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 5820416))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6221824))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6422528))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6623232))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 6823936))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 7024640))]);
  for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      T_relu[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 56) * 896) + (ax2_inner * 224)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 56) * 4)) + ax3_inner))] = max((inverse[(((ax2_inner * 4) + ax3_inner))] + placeholder[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 3136))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_7_kernel1(float* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[64];
  __shared__ float placeholder_shared[256];
  __shared__ float data_pack_shared[256];
  bgemm_local[(0)] = 0.000000e+00f;
  bgemm_local[(32)] = 0.000000e+00f;
  bgemm_local[(8)] = 0.000000e+00f;
  bgemm_local[(40)] = 0.000000e+00f;
  bgemm_local[(16)] = 0.000000e+00f;
  bgemm_local[(48)] = 0.000000e+00f;
  bgemm_local[(24)] = 0.000000e+00f;
  bgemm_local[(56)] = 0.000000e+00f;
  bgemm_local[(1)] = 0.000000e+00f;
  bgemm_local[(33)] = 0.000000e+00f;
  bgemm_local[(9)] = 0.000000e+00f;
  bgemm_local[(41)] = 0.000000e+00f;
  bgemm_local[(17)] = 0.000000e+00f;
  bgemm_local[(49)] = 0.000000e+00f;
  bgemm_local[(25)] = 0.000000e+00f;
  bgemm_local[(57)] = 0.000000e+00f;
  bgemm_local[(2)] = 0.000000e+00f;
  bgemm_local[(34)] = 0.000000e+00f;
  bgemm_local[(10)] = 0.000000e+00f;
  bgemm_local[(42)] = 0.000000e+00f;
  bgemm_local[(18)] = 0.000000e+00f;
  bgemm_local[(50)] = 0.000000e+00f;
  bgemm_local[(26)] = 0.000000e+00f;
  bgemm_local[(58)] = 0.000000e+00f;
  bgemm_local[(3)] = 0.000000e+00f;
  bgemm_local[(35)] = 0.000000e+00f;
  bgemm_local[(11)] = 0.000000e+00f;
  bgemm_local[(43)] = 0.000000e+00f;
  bgemm_local[(19)] = 0.000000e+00f;
  bgemm_local[(51)] = 0.000000e+00f;
  bgemm_local[(27)] = 0.000000e+00f;
  bgemm_local[(59)] = 0.000000e+00f;
  bgemm_local[(4)] = 0.000000e+00f;
  bgemm_local[(36)] = 0.000000e+00f;
  bgemm_local[(12)] = 0.000000e+00f;
  bgemm_local[(44)] = 0.000000e+00f;
  bgemm_local[(20)] = 0.000000e+00f;
  bgemm_local[(52)] = 0.000000e+00f;
  bgemm_local[(28)] = 0.000000e+00f;
  bgemm_local[(60)] = 0.000000e+00f;
  bgemm_local[(5)] = 0.000000e+00f;
  bgemm_local[(37)] = 0.000000e+00f;
  bgemm_local[(13)] = 0.000000e+00f;
  bgemm_local[(45)] = 0.000000e+00f;
  bgemm_local[(21)] = 0.000000e+00f;
  bgemm_local[(53)] = 0.000000e+00f;
  bgemm_local[(29)] = 0.000000e+00f;
  bgemm_local[(61)] = 0.000000e+00f;
  bgemm_local[(6)] = 0.000000e+00f;
  bgemm_local[(38)] = 0.000000e+00f;
  bgemm_local[(14)] = 0.000000e+00f;
  bgemm_local[(46)] = 0.000000e+00f;
  bgemm_local[(22)] = 0.000000e+00f;
  bgemm_local[(54)] = 0.000000e+00f;
  bgemm_local[(30)] = 0.000000e+00f;
  bgemm_local[(62)] = 0.000000e+00f;
  bgemm_local[(7)] = 0.000000e+00f;
  bgemm_local[(39)] = 0.000000e+00f;
  bgemm_local[(15)] = 0.000000e+00f;
  bgemm_local[(47)] = 0.000000e+00f;
  bgemm_local[(23)] = 0.000000e+00f;
  bgemm_local[(55)] = 0.000000e+00f;
  bgemm_local[(31)] = 0.000000e+00f;
  bgemm_local[(63)] = 0.000000e+00f;
  for (int ci_outer = 0; ci_outer < 16; ++ci_outer) {
    __syncthreads();
    placeholder_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)))] = placeholder[(((((((int)blockIdx.z) * 4096) + (ci_outer * 256)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    placeholder_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64))] = placeholder[((((((((int)blockIdx.z) * 4096) + (ci_outer * 256)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 64))];
    placeholder_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128))] = placeholder[((((((((int)blockIdx.z) * 4096) + (ci_outer * 256)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 128))];
    placeholder_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192))] = placeholder[((((((((int)blockIdx.z) * 4096) + (ci_outer * 256)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 192))];
    data_pack_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 200704) + (ci_outer * 12544)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64))] = data_pack[(((((((((int)blockIdx.z) * 200704) + (ci_outer * 12544)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 3136))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128))] = data_pack[(((((((((int)blockIdx.z) * 200704) + (ci_outer * 12544)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 6272))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192))] = data_pack[(((((((((int)blockIdx.z) * 200704) + (ci_outer * 12544)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 9408))];
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 4; ++ci_inner) {
      bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 8)))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 32))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 8)))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 32))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 8)))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 32))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 8)))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(56)] = (bgemm_local[(56)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 32))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 1))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 33))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 1))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 33))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 1))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 33))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 1))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(57)] = (bgemm_local[(57)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 33))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 2))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 34))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 2))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 34))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 2))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 34))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 2))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(58)] = (bgemm_local[(58)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 34))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 3))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 35))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 3))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 35))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 3))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 35))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 3))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(59)] = (bgemm_local[(59)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 35))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 4))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 36))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 4))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 36))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 4))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 36))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 4))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(60)] = (bgemm_local[(60)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 36))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 5))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 37))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 5))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 37))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 5))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 37))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 5))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(61)] = (bgemm_local[(61)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 37))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 6))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 38))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 6))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 38))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 6))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 38))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 6))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(62)] = (bgemm_local[(62)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 38))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 7))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 39))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
      bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 7))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 39))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 7))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 39))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 7))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(63)] = (bgemm_local[(63)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 8)) + 39))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
    }
  }
  bgemm[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)))] = bgemm_local[(0)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100352))] = bgemm_local[(32)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 16))] = bgemm_local[(8)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100368))] = bgemm_local[(40)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 32))] = bgemm_local[(16)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100384))] = bgemm_local[(48)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 48))] = bgemm_local[(24)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100400))] = bgemm_local[(56)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 3136))] = bgemm_local[(1)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 103488))] = bgemm_local[(33)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 3152))] = bgemm_local[(9)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 103504))] = bgemm_local[(41)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 3168))] = bgemm_local[(17)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 103520))] = bgemm_local[(49)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 3184))] = bgemm_local[(25)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 103536))] = bgemm_local[(57)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 6272))] = bgemm_local[(2)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 106624))] = bgemm_local[(34)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 6288))] = bgemm_local[(10)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 106640))] = bgemm_local[(42)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 6304))] = bgemm_local[(18)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 106656))] = bgemm_local[(50)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 6320))] = bgemm_local[(26)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 106672))] = bgemm_local[(58)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 9408))] = bgemm_local[(3)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 109760))] = bgemm_local[(35)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 9424))] = bgemm_local[(11)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 109776))] = bgemm_local[(43)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 9440))] = bgemm_local[(19)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 109792))] = bgemm_local[(51)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 9456))] = bgemm_local[(27)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 109808))] = bgemm_local[(59)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 12544))] = bgemm_local[(4)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 112896))] = bgemm_local[(36)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 12560))] = bgemm_local[(12)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 112912))] = bgemm_local[(44)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 12576))] = bgemm_local[(20)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 112928))] = bgemm_local[(52)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 12592))] = bgemm_local[(28)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 112944))] = bgemm_local[(60)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 15680))] = bgemm_local[(5)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 116032))] = bgemm_local[(37)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 15696))] = bgemm_local[(13)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 116048))] = bgemm_local[(45)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 15712))] = bgemm_local[(21)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 116064))] = bgemm_local[(53)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 15728))] = bgemm_local[(29)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 116080))] = bgemm_local[(61)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 18816))] = bgemm_local[(6)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 119168))] = bgemm_local[(38)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 18832))] = bgemm_local[(14)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 119184))] = bgemm_local[(46)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 18848))] = bgemm_local[(22)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 119200))] = bgemm_local[(54)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 18864))] = bgemm_local[(30)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 119216))] = bgemm_local[(62)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 21952))] = bgemm_local[(7)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 122304))] = bgemm_local[(39)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 21968))] = bgemm_local[(15)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 122320))] = bgemm_local[(47)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 21984))] = bgemm_local[(23)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 122336))] = bgemm_local[(55)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 22000))] = bgemm_local[(31)];
  bgemm[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 122352))] = bgemm_local[(63)];
}

extern "C" __global__ void fused_nn_dense_add_nn_relu_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float T_dense_rf[1];
  __shared__ float red_buf0[64];
  __shared__ float T_dense[1];
  T_dense_rf[(0)] = 0.000000e+00f;
  for (int k_outer = 0; k_outer < 64; ++k_outer) {
    T_dense_rf[(0)] = (T_dense_rf[(0)] + (placeholder[(((k_outer * 64) + ((int)threadIdx.x)))] * placeholder1[((((((int)blockIdx.x) * 4096) + (k_outer * 64)) + ((int)threadIdx.x)))]));
  }
  __syncthreads();
  ((volatile float*)red_buf0)[(((int)threadIdx.x))] = T_dense_rf[(0)];
  __syncthreads();
  if (((int)threadIdx.x) < 32) {
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 32))]);
  }
  __syncthreads();
  if (((int)threadIdx.x) < 16) {
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 16))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 8))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 4))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 2))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 1))]);
  }
  __syncthreads();
  if (((int)threadIdx.x) == 0) {
    T_dense[(0)] = ((volatile float*)red_buf0)[(0)];
  }
  if (((int)threadIdx.x) == 0) {
    T_relu[(((int)blockIdx.x))] = max((T_dense[(0)] + placeholder2[(((int)blockIdx.x))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5_kernel2(float* __restrict__ bgemm, float* __restrict__ T_relu, float* __restrict__ placeholder) {
  float inverse[16];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((int)blockIdx.x) * 128) + ((int)threadIdx.x)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f));
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f));
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2308096))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2910208))]);
  inverse[(4)] = 0.000000e+00f;
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f));
  inverse[(5)] = 0.000000e+00f;
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 5.000000e-01f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -2.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f) * -2.000000e+00f));
  inverse[(6)] = 0.000000e+00f;
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 5.000000e-01f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -2.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f) * 4.000000e+00f));
  inverse[(7)] = 0.000000e+00f;
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 5.000000e-01f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2308096))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -2.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -2.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2910208))] * -2.000000e+00f));
  inverse[(8)] = 0.000000e+00f;
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f));
  inverse[(9)] = 0.000000e+00f;
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 2.500000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 2.500000e-01f) * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * 4.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 4.000000e+00f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f) * -2.000000e+00f));
  inverse[(10)] = 0.000000e+00f;
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 2.500000e-01f) * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 4.000000e+00f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f) * 4.000000e+00f));
  inverse[(11)] = 0.000000e+00f;
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 2.500000e-01f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2308096))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * 4.000000e+00f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 4.000000e+00f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2910208))] * 4.000000e+00f));
  inverse[(12)] = 0.000000e+00f;
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3110912))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3311616))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))]);
  inverse[(13)] = 0.000000e+00f;
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 1.250000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 1.250000e-01f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -8.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -8.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3110912))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3311616))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))] * -2.000000e+00f));
  inverse[(14)] = 0.000000e+00f;
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 1.250000e-01f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -8.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3110912))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3311616))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))] * 4.000000e+00f));
  inverse[(15)] = 0.000000e+00f;
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 1.250000e-01f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2308096))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -8.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2910208))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3110912))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3311616))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3512320))]);
  for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      T_relu[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 28) * 448) + (ax2_inner * 112)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 28) * 4)) + ax3_inner))] = max((inverse[(((ax2_inner * 4) + ax3_inner))] + placeholder[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 784))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2(float* __restrict__ bgemm, float* __restrict__ T_relu, float* __restrict__ placeholder) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((int)blockIdx.x) * 128) + ((int)threadIdx.x)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      T_relu[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 56) + (ax2_inner * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + ax3_inner))] = max((inverse[(((ax2_inner * 2) + ax3_inner))] + placeholder[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 196))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_7_kernel0(float* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[36];
  float data_pack_local[36];
  for (int eps = 0; eps < 6; ++eps) {
    for (int nu = 0; nu < 6; ++nu) {
      d[(((eps * 6) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 3136) / 56) * 4) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 3136) / 56) * 4) + eps) < 225)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 56) * 4) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 56) * 4) + nu) < 225)) ? placeholder[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 56) * 896) + (eps * 224)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 56) * 4)) + nu) - 225))] : 0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(1)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(3)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(4)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(6)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(7)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(8)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(9)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(12)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(13)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(14)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(15)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(18)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(19)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(20)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(21)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(24)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(28)]);
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(1)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(2)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(3)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(4)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(8)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(14)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(15)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(20)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(21)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(25)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(28)]);
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(2)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(3)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(4)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(7)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(8)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(9)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(13)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(14)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(15)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(19)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(20)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(21)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(28)]);
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(3)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(4)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(7)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(13)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(15)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(19)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(21)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(28)]);
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(1)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(3)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(4)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(7)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(9)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(13)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(15)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(19)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(21)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(28)]);
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(1)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(2)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(3)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(4)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(5)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(8)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(9)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(10)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(11)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(14)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(15)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(16)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(17)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(20)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(21)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(22)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(23)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(25)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(29)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(6)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(12)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(13)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(14)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(15)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(18)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(19)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(20)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(21)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(24)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(28)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(7)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(10)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(14)] * -2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(15)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(20)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(21)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(25)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(28)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(10)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(13)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(14)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(15)] * -2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(19)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(20)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(21)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(28)]);
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(13)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(15)] * -2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(19)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(21)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(28)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(13)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(15)] * -2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(19)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(21)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(28)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(14)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(15)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(16)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(17)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(20)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(21)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(22)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(23)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(25)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(29)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(7)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(8)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(9)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(12)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(13)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(14)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(15)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(18)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(19)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(20)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(21)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(24)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(28)]);
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(8)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(9)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(14)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(15)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(20)] * 2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(21)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(25)]);
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(28)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(7)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(8)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(9)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(13)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(14)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(15)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(19)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(20)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(21)] * 2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(28)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(7)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(9)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(13)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(15)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(19)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(21)] * 2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(28)]);
  data_pack_local[(16)] = 0.000000e+00f;
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(7)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(9)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(13)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(15)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(19)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(21)] * 2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + d[(28)]);
  data_pack_local[(17)] = 0.000000e+00f;
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(8)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(9)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(10)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(14)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(15)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(16)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(17)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(20)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(21)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(22)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(23)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(25)]);
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(29)]);
  data_pack_local[(18)] = 0.000000e+00f;
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(6)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(7)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(8)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(9)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(18)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(19)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(20)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(21)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(24)]);
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(28)]);
  data_pack_local[(19)] = 0.000000e+00f;
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(8)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(9)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(20)] * 2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(21)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(25)]);
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(28)]);
  data_pack_local[(20)] = 0.000000e+00f;
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(7)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(8)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(9)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(19)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(20)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(21)] * 2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + d[(28)]);
  data_pack_local[(21)] = 0.000000e+00f;
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(7)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(9)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(19)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(21)] * 2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + d[(28)]);
  data_pack_local[(22)] = 0.000000e+00f;
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(7)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(9)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(19)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(21)] * 2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + d[(28)]);
  data_pack_local[(23)] = 0.000000e+00f;
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(8)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(9)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(10)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(11)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(20)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(21)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(22)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(23)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(25)]);
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(29)]);
  data_pack_local[(24)] = 0.000000e+00f;
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(6)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(7)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(8)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(9)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(18)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(19)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(20)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(21)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(24)]);
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(28)]);
  data_pack_local[(25)] = 0.000000e+00f;
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(8)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(9)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(20)] * -5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(21)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(25)]);
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(28)]);
  data_pack_local[(26)] = 0.000000e+00f;
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(7)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(8)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(9)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(19)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(20)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(21)] * -5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + d[(28)]);
  data_pack_local[(27)] = 0.000000e+00f;
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(7)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(9)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(19)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(21)] * -5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + d[(28)]);
  data_pack_local[(28)] = 0.000000e+00f;
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(7)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(9)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(19)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(21)] * -5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + d[(28)]);
  data_pack_local[(29)] = 0.000000e+00f;
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(8)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(9)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(10)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(11)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(20)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(21)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(22)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(23)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(25)]);
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(29)]);
  data_pack_local[(30)] = 0.000000e+00f;
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(6)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(10)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(12)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(13)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(14)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(15)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(18)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(19)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(20)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(21)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(24)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(25)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(26)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(27)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(30)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(31)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(32)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(33)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(34)]);
  data_pack_local[(31)] = 0.000000e+00f;
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(7)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(10)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(14)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(15)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(20)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(21)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(26)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(27)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(31)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(32)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(33)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(34)]);
  data_pack_local[(32)] = 0.000000e+00f;
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(10)]);
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(13)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(14)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(15)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(19)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(20)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(21)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(25)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(26)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(27)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(31)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(32)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(33)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(34)]);
  data_pack_local[(33)] = 0.000000e+00f;
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(10)]);
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(13)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(15)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(19)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(21)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(25)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(27)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(31)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(33)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(34)]);
  data_pack_local[(34)] = 0.000000e+00f;
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(10)]);
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(13)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(15)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(19)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(21)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(25)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(27)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(31)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(33)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(34)]);
  data_pack_local[(35)] = 0.000000e+00f;
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(7)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(11)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(14)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(15)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(16)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(17)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(20)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(21)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(22)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(23)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(26)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(27)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(28)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(29)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(31)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(32)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(33)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(34)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(35)]);
  for (int eps1 = 0; eps1 < 6; ++eps1) {
    for (int nu1 = 0; nu1 < 6; ++nu1) {
      data_pack[(((((eps1 * 1204224) + (nu1 * 200704)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 6) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_max_pool2d_2_kernel0(float* __restrict__ placeholder, float* __restrict__ tensor) {
  float tensor_local[1];
  tensor_local[(0)] = -3.402823e+38f;
  for (int dh = 0; dh < 2; ++dh) {
    for (int dw = 0; dw < 2; ++dw) {
      tensor_local[(0)] = max(tensor_local[(0)], placeholder[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 28) * 112) + (dh * 56)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 28) * 2)) + dw))]);
    }
  }
  tensor[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = tensor_local[(0)];
}

extern "C" __global__ void fused_nn_softmax_kernel0(float* __restrict__ placeholder, float* __restrict__ T_softmax_norm) {
  float normal_reduce_temp0[1];
  float red_buf0[1];
  float T_softmax_exp[32];
  float normal_reduce_temp01[1];
  float red_buf01[1];
  normal_reduce_temp0[(0)] = -3.402823e+38f;
  for (int k_inner = 0; k_inner < 32; ++k_inner) {
    if (((((int)threadIdx.x) * 32) + k_inner) < 1000) {
      normal_reduce_temp0[(0)] = max(normal_reduce_temp0[(0)], placeholder[(((((int)threadIdx.x) * 32) + k_inner))]);
    }
  }
  unsigned int mask[1];
  float t0[1];
  red_buf0[(0)] = normal_reduce_temp0[(0)];
  mask[(0)] = __activemask();
  t0[(0)] = __shfl_down_sync(mask[(0)], red_buf0[(0)], 16, 32);
  red_buf0[(0)] = max(red_buf0[(0)], t0[(0)]);
  t0[(0)] = __shfl_down_sync(mask[(0)], red_buf0[(0)], 8, 32);
  red_buf0[(0)] = max(red_buf0[(0)], t0[(0)]);
  t0[(0)] = __shfl_down_sync(mask[(0)], red_buf0[(0)], 4, 32);
  red_buf0[(0)] = max(red_buf0[(0)], t0[(0)]);
  t0[(0)] = __shfl_down_sync(mask[(0)], red_buf0[(0)], 2, 32);
  red_buf0[(0)] = max(red_buf0[(0)], t0[(0)]);
  t0[(0)] = __shfl_down_sync(mask[(0)], red_buf0[(0)], 1, 32);
  red_buf0[(0)] = max(red_buf0[(0)], t0[(0)]);
  red_buf0[(0)] = __shfl_sync(mask[(0)], red_buf0[(0)], 0, 32);
  for (int i1_inner_outer = 0; i1_inner_outer < 8; ++i1_inner_outer) {
    for (int i1_inner_inner_s = 0; i1_inner_inner_s < 4; ++i1_inner_inner_s) {
      if ((((((int)threadIdx.x) * 32) + (i1_inner_outer * 4)) + i1_inner_inner_s) < 1000) {
        T_softmax_exp[(((i1_inner_outer * 4) + i1_inner_inner_s))] = __expf((placeholder[((((((int)threadIdx.x) * 32) + (i1_inner_outer * 4)) + i1_inner_inner_s))] - red_buf0[(0)]));
      }
    }
  }
  normal_reduce_temp01[(0)] = 0.000000e+00f;
  for (int k_inner1 = 0; k_inner1 < 32; ++k_inner1) {
    if (((((int)threadIdx.x) * 32) + k_inner1) < 1000) {
      normal_reduce_temp01[(0)] = (normal_reduce_temp01[(0)] + __shfl_sync(__activemask(), T_softmax_exp[(k_inner1)], ((int)threadIdx.x), 32));
    }
  }
  unsigned int mask1[1];
  float t01[1];
  red_buf01[(0)] = normal_reduce_temp01[(0)];
  mask1[(0)] = __activemask();
  t01[(0)] = __shfl_down_sync(mask1[(0)], red_buf01[(0)], 16, 32);
  red_buf01[(0)] = (red_buf01[(0)] + t01[(0)]);
  t01[(0)] = __shfl_down_sync(mask1[(0)], red_buf01[(0)], 8, 32);
  red_buf01[(0)] = (red_buf01[(0)] + t01[(0)]);
  t01[(0)] = __shfl_down_sync(mask1[(0)], red_buf01[(0)], 4, 32);
  red_buf01[(0)] = (red_buf01[(0)] + t01[(0)]);
  t01[(0)] = __shfl_down_sync(mask1[(0)], red_buf01[(0)], 2, 32);
  red_buf01[(0)] = (red_buf01[(0)] + t01[(0)]);
  t01[(0)] = __shfl_down_sync(mask1[(0)], red_buf01[(0)], 1, 32);
  red_buf01[(0)] = (red_buf01[(0)] + t01[(0)]);
  red_buf01[(0)] = __shfl_sync(mask1[(0)], red_buf01[(0)], 0, 32);
  for (int i1_inner_outer1 = 0; i1_inner_outer1 < 8; ++i1_inner_outer1) {
    for (int i1_inner_inner_s1 = 0; i1_inner_inner_s1 < 4; ++i1_inner_inner_s1) {
      if ((((((int)threadIdx.x) * 32) + (i1_inner_outer1 * 4)) + i1_inner_inner_s1) < 1000) {
        T_softmax_norm[((((((int)threadIdx.x) * 32) + (i1_inner_outer1 * 4)) + i1_inner_inner_s1))] = (__shfl_sync(__activemask(), T_softmax_exp[(((i1_inner_outer1 * 4) + i1_inner_inner_s1))], ((int)threadIdx.x), 32) / red_buf01[(0)]);
      }
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6_kernel0(float* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[36];
  float data_pack_local[36];
  for (int eps = 0; eps < 6; ++eps) {
    for (int nu = 0; nu < 6; ++nu) {
      d[(((eps * 6) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 784) / 28) * 4) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 784) / 28) * 4) + eps) < 113)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 28) * 4) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 28) * 4) + nu) < 113)) ? placeholder[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 28) * 448) + (eps * 112)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 28) * 4)) + nu) - 113))] : 0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(1)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(3)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(4)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(6)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(7)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(8)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(9)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(12)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(13)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(14)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(15)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(18)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(19)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(20)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(21)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(24)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(28)]);
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(1)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(2)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(3)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(4)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(8)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(14)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(15)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(20)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(21)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(25)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(28)]);
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(2)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(3)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(4)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(7)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(8)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(9)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(13)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(14)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(15)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(19)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(20)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(21)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(28)]);
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(3)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(4)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(7)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(13)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(15)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(19)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(21)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(28)]);
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(1)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(3)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(4)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(7)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(9)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(13)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(15)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(19)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(21)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(28)]);
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(1)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(2)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(3)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(4)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(5)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(8)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(9)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(10)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(11)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(14)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(15)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(16)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(17)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(20)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(21)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(22)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(23)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(25)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(29)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(6)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(12)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(13)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(14)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(15)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(18)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(19)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(20)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(21)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(24)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(28)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(7)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(10)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(14)] * -2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(15)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(20)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(21)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(25)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(28)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(10)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(13)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(14)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(15)] * -2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(19)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(20)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(21)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(28)]);
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(13)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(15)] * -2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(19)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(21)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(28)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(13)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(15)] * -2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(19)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(21)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(28)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(14)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(15)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(16)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(17)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(20)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(21)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(22)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(23)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(25)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(29)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(7)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(8)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(9)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(12)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(13)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(14)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(15)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(18)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(19)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(20)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(21)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(24)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(28)]);
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(8)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(9)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(14)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(15)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(20)] * 2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(21)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(25)]);
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(28)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(7)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(8)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(9)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(13)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(14)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(15)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(19)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(20)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(21)] * 2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(28)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(7)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(9)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(13)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(15)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(19)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(21)] * 2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(28)]);
  data_pack_local[(16)] = 0.000000e+00f;
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(7)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(9)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(13)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(15)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(19)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(21)] * 2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + d[(28)]);
  data_pack_local[(17)] = 0.000000e+00f;
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(8)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(9)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(10)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(14)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(15)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(16)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(17)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(20)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(21)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(22)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(23)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(25)]);
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(29)]);
  data_pack_local[(18)] = 0.000000e+00f;
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(6)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(7)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(8)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(9)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(18)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(19)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(20)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(21)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(24)]);
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(28)]);
  data_pack_local[(19)] = 0.000000e+00f;
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(8)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(9)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(20)] * 2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(21)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(25)]);
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(28)]);
  data_pack_local[(20)] = 0.000000e+00f;
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(7)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(8)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(9)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(19)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(20)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(21)] * 2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + d[(28)]);
  data_pack_local[(21)] = 0.000000e+00f;
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(7)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(9)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(19)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(21)] * 2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + d[(28)]);
  data_pack_local[(22)] = 0.000000e+00f;
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(7)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(9)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(19)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(21)] * 2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + d[(28)]);
  data_pack_local[(23)] = 0.000000e+00f;
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(8)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(9)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(10)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(11)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(20)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(21)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(22)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(23)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(25)]);
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(29)]);
  data_pack_local[(24)] = 0.000000e+00f;
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(6)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(7)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(8)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(9)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(18)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(19)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(20)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(21)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(24)]);
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(28)]);
  data_pack_local[(25)] = 0.000000e+00f;
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(8)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(9)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(20)] * -5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(21)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(25)]);
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(28)]);
  data_pack_local[(26)] = 0.000000e+00f;
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(7)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(8)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(9)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(19)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(20)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(21)] * -5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + d[(28)]);
  data_pack_local[(27)] = 0.000000e+00f;
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(7)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(9)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(19)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(21)] * -5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + d[(28)]);
  data_pack_local[(28)] = 0.000000e+00f;
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(7)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(9)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(19)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(21)] * -5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + d[(28)]);
  data_pack_local[(29)] = 0.000000e+00f;
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(8)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(9)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(10)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(11)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(20)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(21)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(22)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(23)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(25)]);
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(29)]);
  data_pack_local[(30)] = 0.000000e+00f;
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(6)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(10)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(12)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(13)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(14)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(15)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(18)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(19)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(20)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(21)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(24)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(25)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(26)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(27)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(30)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(31)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(32)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(33)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(34)]);
  data_pack_local[(31)] = 0.000000e+00f;
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(7)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(10)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(14)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(15)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(20)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(21)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(26)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(27)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(31)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(32)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(33)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(34)]);
  data_pack_local[(32)] = 0.000000e+00f;
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(10)]);
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(13)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(14)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(15)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(19)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(20)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(21)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(25)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(26)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(27)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(31)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(32)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(33)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(34)]);
  data_pack_local[(33)] = 0.000000e+00f;
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(10)]);
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(13)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(15)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(19)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(21)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(25)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(27)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(31)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(33)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(34)]);
  data_pack_local[(34)] = 0.000000e+00f;
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(10)]);
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(13)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(15)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(19)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(21)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(25)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(27)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(31)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(33)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(34)]);
  data_pack_local[(35)] = 0.000000e+00f;
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(7)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(11)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(14)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(15)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(16)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(17)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(20)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(21)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(22)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(23)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(26)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(27)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(28)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(29)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(31)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(32)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(33)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(34)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(35)]);
  for (int eps1 = 0; eps1 < 6; ++eps1) {
    for (int nu1 = 0; nu1 < 6; ++nu1) {
      data_pack[(((((eps1 * 301056) + (nu1 * 50176)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 6) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[136];
  __shared__ float placeholder_shared[576];
  for (int ff_init = 0; ff_init < 2; ++ff_init) {
    for (int xx_init = 0; xx_init < 2; ++xx_init) {
      compute[(((ff_init * 2) + xx_init))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 8))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 4))] = 0.000000e+00f;
      compute[((((ff_init * 2) + xx_init) + 12))] = 0.000000e+00f;
    }
  }
  for (int rc_outer = 0; rc_outer < 3; ++rc_outer) {
    __syncthreads();
    if (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) < 136) {
      if (((int)threadIdx.x) < 9) {
        pad_temp_shared[(((((int)threadIdx.z) * 9) + ((int)threadIdx.x)))] = (((((1 <= ((((int)blockIdx.y) * 2) + (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) / 34))) && (((((int)blockIdx.y) * 2) + (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) / 34)) < 225)) && (1 <= ((((int)blockIdx.x) * 32) + (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) % 34)))) && (((((int)blockIdx.x) * 32) + (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) % 34)) < 225)) ? placeholder[(((((((rc_outer * 50176) + (((int)blockIdx.y) * 448)) + ((((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) / 34) * 224)) + (((int)blockIdx.x) * 32)) + (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) % 34)) - 225))] : 0.000000e+00f);
      }
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) / 3)) < 64) {
        if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {
          if ((((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 576) {
            if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 36) {
              placeholder_shared[((((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = placeholder1[((((((((int)threadIdx.z) * 108) + ((((int)threadIdx.x) / 3) * 27)) + (rc_outer * 9)) + ((((int)threadIdx.x) % 3) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
            }
          }
        }
      }
    }
    __syncthreads();
    for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {
      for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {
        for (int ff = 0; ff < 2; ++ff) {
          for (int xx = 0; xx < 2; ++xx) {
            compute[(((ff * 2) + xx))] = (compute[(((ff * 2) + xx))] + (pad_temp_shared[(((((ry_inner * 34) + (((int)threadIdx.x) * 2)) + xx) + rx_inner))] * placeholder_shared[(((((((int)threadIdx.z) * 18) + (ff * 9)) + (ry_inner * 3)) + rx_inner))]));
            compute[((((ff * 2) + xx) + 8))] = (compute[((((ff * 2) + xx) + 8))] + (pad_temp_shared[(((((ry_inner * 34) + (((int)threadIdx.x) * 2)) + xx) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (ff * 9)) + (ry_inner * 3)) + rx_inner) + 288))]));
            compute[((((ff * 2) + xx) + 4))] = (compute[((((ff * 2) + xx) + 4))] + (pad_temp_shared[((((((ry_inner * 34) + (((int)threadIdx.x) * 2)) + xx) + rx_inner) + 34))] * placeholder_shared[(((((((int)threadIdx.z) * 18) + (ff * 9)) + (ry_inner * 3)) + rx_inner))]));
            compute[((((ff * 2) + xx) + 12))] = (compute[((((ff * 2) + xx) + 12))] + (pad_temp_shared[((((((ry_inner * 34) + (((int)threadIdx.x) * 2)) + xx) + rx_inner) + 34))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (ff * 9)) + (ry_inner * 3)) + rx_inner) + 288))]));
          }
        }
      }
    }
  }
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 2; ++ax1_inner_inner_inner) {
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[(((((((((int)threadIdx.z) * 100352) + (ax1_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 448)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((compute[(((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)threadIdx.z) * 2) + ax1_inner_inner_inner))]), 0.000000e+00f);
      T_relu[((((((((((int)threadIdx.z) * 100352) + (ax1_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 448)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 1605632))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 8))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
      T_relu[((((((((((int)threadIdx.z) * 100352) + (ax1_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 448)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 224))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)threadIdx.z) * 2) + ax1_inner_inner_inner))]), 0.000000e+00f);
      T_relu[((((((((((int)threadIdx.z) * 100352) + (ax1_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 448)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 1605856))] = max((compute[((((ax1_inner_inner_inner * 2) + ax3_inner_inner_inner) + 12))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6_kernel1(float* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[56];
  __shared__ float placeholder_shared[512];
  __shared__ float data_pack_shared[896];
  bgemm_local[(0)] = 0.000000e+00f;
  bgemm_local[(14)] = 0.000000e+00f;
  bgemm_local[(28)] = 0.000000e+00f;
  bgemm_local[(42)] = 0.000000e+00f;
  bgemm_local[(2)] = 0.000000e+00f;
  bgemm_local[(16)] = 0.000000e+00f;
  bgemm_local[(30)] = 0.000000e+00f;
  bgemm_local[(44)] = 0.000000e+00f;
  bgemm_local[(4)] = 0.000000e+00f;
  bgemm_local[(18)] = 0.000000e+00f;
  bgemm_local[(32)] = 0.000000e+00f;
  bgemm_local[(46)] = 0.000000e+00f;
  bgemm_local[(6)] = 0.000000e+00f;
  bgemm_local[(20)] = 0.000000e+00f;
  bgemm_local[(34)] = 0.000000e+00f;
  bgemm_local[(48)] = 0.000000e+00f;
  bgemm_local[(8)] = 0.000000e+00f;
  bgemm_local[(22)] = 0.000000e+00f;
  bgemm_local[(36)] = 0.000000e+00f;
  bgemm_local[(50)] = 0.000000e+00f;
  bgemm_local[(10)] = 0.000000e+00f;
  bgemm_local[(24)] = 0.000000e+00f;
  bgemm_local[(38)] = 0.000000e+00f;
  bgemm_local[(52)] = 0.000000e+00f;
  bgemm_local[(12)] = 0.000000e+00f;
  bgemm_local[(26)] = 0.000000e+00f;
  bgemm_local[(40)] = 0.000000e+00f;
  bgemm_local[(54)] = 0.000000e+00f;
  bgemm_local[(1)] = 0.000000e+00f;
  bgemm_local[(15)] = 0.000000e+00f;
  bgemm_local[(29)] = 0.000000e+00f;
  bgemm_local[(43)] = 0.000000e+00f;
  bgemm_local[(3)] = 0.000000e+00f;
  bgemm_local[(17)] = 0.000000e+00f;
  bgemm_local[(31)] = 0.000000e+00f;
  bgemm_local[(45)] = 0.000000e+00f;
  bgemm_local[(5)] = 0.000000e+00f;
  bgemm_local[(19)] = 0.000000e+00f;
  bgemm_local[(33)] = 0.000000e+00f;
  bgemm_local[(47)] = 0.000000e+00f;
  bgemm_local[(7)] = 0.000000e+00f;
  bgemm_local[(21)] = 0.000000e+00f;
  bgemm_local[(35)] = 0.000000e+00f;
  bgemm_local[(49)] = 0.000000e+00f;
  bgemm_local[(9)] = 0.000000e+00f;
  bgemm_local[(23)] = 0.000000e+00f;
  bgemm_local[(37)] = 0.000000e+00f;
  bgemm_local[(51)] = 0.000000e+00f;
  bgemm_local[(11)] = 0.000000e+00f;
  bgemm_local[(25)] = 0.000000e+00f;
  bgemm_local[(39)] = 0.000000e+00f;
  bgemm_local[(53)] = 0.000000e+00f;
  bgemm_local[(13)] = 0.000000e+00f;
  bgemm_local[(27)] = 0.000000e+00f;
  bgemm_local[(41)] = 0.000000e+00f;
  bgemm_local[(55)] = 0.000000e+00f;
  for (int ci_outer = 0; ci_outer < 8; ++ci_outer) {
    __syncthreads();
    placeholder_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)))] = placeholder[((((((((int)blockIdx.z) * 8192) + (ci_outer * 1024)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 128)) + (((int)blockIdx.y) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)))];
    placeholder_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128))] = placeholder[(((((((((int)blockIdx.z) * 8192) + (ci_outer * 1024)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 128)) + (((int)blockIdx.y) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)) + 256))];
    placeholder_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256))] = placeholder[(((((((((int)blockIdx.z) * 8192) + (ci_outer * 1024)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 128)) + (((int)blockIdx.y) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)) + 512))];
    placeholder_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384))] = placeholder[(((((((((int)blockIdx.z) * 8192) + (ci_outer * 1024)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 128)) + (((int)blockIdx.y) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)) + 768))];
    data_pack_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 6272)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) / 112) * 784)) + (((int)blockIdx.x) * 112)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 16) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 48) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 80) % 112)))];
    data_pack_shared[((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 6272)) + (((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768) / 112) * 784)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96) % 112)))];
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 8; ++ci_inner) {
      bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 2)))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
      bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 16))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
      bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 32))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
      bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 48))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
      bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 2)))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 16))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 48))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 2)))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 16))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 48))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 2)))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 16))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 48))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 2)))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
      bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 16))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
      bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
      bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 48))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
      bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 2)))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
      bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 16))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
      bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
      bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 48))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
      bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((ci_inner * 64) + (((int)threadIdx.y) * 2)))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 16))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 48))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 1))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
      bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 17))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
      bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 33))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
      bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 49))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
      bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 1))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 17))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 33))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 49))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 1))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 17))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 33))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 49))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
      bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 1))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 17))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 33))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 49))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
      bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 1))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
      bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 17))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
      bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 33))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
      bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 49))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
      bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 1))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
      bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 17))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
      bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 33))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
      bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 49))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
      bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 1))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 17))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 33))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[((((ci_inner * 64) + (((int)threadIdx.y) * 2)) + 49))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
    }
  }
  bgemm[((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)))] = bgemm_local[(0)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12544))] = bgemm_local[(14)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25088))] = bgemm_local[(28)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37632))] = bgemm_local[(42)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 16))] = bgemm_local[(2)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12560))] = bgemm_local[(16)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25104))] = bgemm_local[(30)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37648))] = bgemm_local[(44)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 32))] = bgemm_local[(4)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12576))] = bgemm_local[(18)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25120))] = bgemm_local[(32)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37664))] = bgemm_local[(46)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 48))] = bgemm_local[(6)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12592))] = bgemm_local[(20)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25136))] = bgemm_local[(34)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37680))] = bgemm_local[(48)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 64))] = bgemm_local[(8)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12608))] = bgemm_local[(22)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25152))] = bgemm_local[(36)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37696))] = bgemm_local[(50)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 80))] = bgemm_local[(10)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12624))] = bgemm_local[(24)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25168))] = bgemm_local[(38)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37712))] = bgemm_local[(52)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 96))] = bgemm_local[(12)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 12640))] = bgemm_local[(26)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25184))] = bgemm_local[(40)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 37728))] = bgemm_local[(54)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 784))] = bgemm_local[(1)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13328))] = bgemm_local[(15)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25872))] = bgemm_local[(29)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38416))] = bgemm_local[(43)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 800))] = bgemm_local[(3)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13344))] = bgemm_local[(17)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25888))] = bgemm_local[(31)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38432))] = bgemm_local[(45)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 816))] = bgemm_local[(5)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13360))] = bgemm_local[(19)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25904))] = bgemm_local[(33)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38448))] = bgemm_local[(47)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 832))] = bgemm_local[(7)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13376))] = bgemm_local[(21)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25920))] = bgemm_local[(35)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38464))] = bgemm_local[(49)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 848))] = bgemm_local[(9)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13392))] = bgemm_local[(23)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25936))] = bgemm_local[(37)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38480))] = bgemm_local[(51)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 864))] = bgemm_local[(11)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13408))] = bgemm_local[(25)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25952))] = bgemm_local[(39)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38496))] = bgemm_local[(53)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 880))] = bgemm_local[(13)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 13424))] = bgemm_local[(27)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 25968))] = bgemm_local[(41)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 38512))] = bgemm_local[(55)];
}

extern "C" __global__ void fused_nn_dense_add_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float T_dense_rf[1];
  __shared__ float red_buf0[64];
  __shared__ float T_dense[1];
  T_dense_rf[(0)] = 0.000000e+00f;
  for (int k_outer = 0; k_outer < 64; ++k_outer) {
    T_dense_rf[(0)] = (T_dense_rf[(0)] + (placeholder[(((k_outer * 64) + ((int)threadIdx.x)))] * placeholder1[((((((int)blockIdx.x) * 4096) + (k_outer * 64)) + ((int)threadIdx.x)))]));
  }
  __syncthreads();
  ((volatile float*)red_buf0)[(((int)threadIdx.x))] = T_dense_rf[(0)];
  __syncthreads();
  if (((int)threadIdx.x) < 32) {
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 32))]);
  }
  __syncthreads();
  if (((int)threadIdx.x) < 16) {
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 16))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 8))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 4))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 2))]);
    ((volatile float*)red_buf0)[(((int)threadIdx.x))] = (((volatile float*)red_buf0)[(((int)threadIdx.x))] + ((volatile float*)red_buf0)[((((int)threadIdx.x) + 1))]);
  }
  __syncthreads();
  if (((int)threadIdx.x) == 0) {
    T_dense[(0)] = ((volatile float*)red_buf0)[(0)];
  }
  if (((int)threadIdx.x) == 0) {
    T_add[(((int)blockIdx.x))] = (T_dense[(0)] + placeholder2[(((int)blockIdx.x))]);
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0(float* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps) < 29)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu) < 29)) ? placeholder[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 56) + (eps * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + nu) - 29))] : 0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 401408) + (nu1 * 100352)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_max_pool2d_4_kernel0(float* __restrict__ placeholder, float* __restrict__ tensor) {
  float tensor_local[1];
  tensor_local[(0)] = -3.402823e+38f;
  for (int dh = 0; dh < 2; ++dh) {
    for (int dw = 0; dw < 2; ++dw) {
      tensor_local[(0)] = max(tensor_local[(0)], placeholder[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 112) * 448) + (dh * 224)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 112) * 2)) + dw))]);
    }
  }
  tensor[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = tensor_local[(0)];
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6_kernel2(float* __restrict__ bgemm, float* __restrict__ T_relu, float* __restrict__ placeholder) {
  float inverse[16];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((int)blockIdx.x) * 128) + ((int)threadIdx.x)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f));
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f));
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2308096))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2910208))]);
  inverse[(4)] = 0.000000e+00f;
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f));
  inverse[(5)] = 0.000000e+00f;
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 5.000000e-01f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -2.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f) * -2.000000e+00f));
  inverse[(6)] = 0.000000e+00f;
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 5.000000e-01f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -2.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f) * 4.000000e+00f));
  inverse[(7)] = 0.000000e+00f;
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 5.000000e-01f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 5.000000e-01f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2308096))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -2.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -2.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -2.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2910208))] * -2.000000e+00f));
  inverse[(8)] = 0.000000e+00f;
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f));
  inverse[(9)] = 0.000000e+00f;
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 2.500000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 2.500000e-01f) * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * 4.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 4.000000e+00f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f) * -2.000000e+00f));
  inverse[(10)] = 0.000000e+00f;
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 2.500000e-01f) * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 4.000000e+00f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f) * 4.000000e+00f));
  inverse[(11)] = 0.000000e+00f;
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 2.500000e-01f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 2.500000e-01f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2308096))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * 4.000000e+00f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * 4.000000e+00f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * 4.000000e+00f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2910208))] * 4.000000e+00f));
  inverse[(12)] = 0.000000e+00f;
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1806336))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2408448))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3010560))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3110912))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3311616))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))]);
  inverse[(13)] = 0.000000e+00f;
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 1.250000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 1.250000e-01f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -8.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -8.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3110912))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3311616))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))] * -2.000000e+00f));
  inverse[(14)] = 0.000000e+00f;
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 1.250000e-01f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -8.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3110912))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3311616))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))] * 4.000000e+00f));
  inverse[(15)] = 0.000000e+00f;
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1906688))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2007040))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2107392))] * 1.250000e-01f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2207744))] * 1.250000e-01f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2308096))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2508800))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2609152))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2709504))] * -8.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2809856))] * -8.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 2910208))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3110912))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3211264))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3311616))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3411968))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 3512320))]);
  for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      T_relu[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 28) * 448) + (ax2_inner * 112)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 28) * 4)) + ax3_inner))] = max((inverse[(((ax2_inner * 4) + ax3_inner))] + placeholder[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 784))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1(float* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[28];
  __shared__ float placeholder_shared[1024];
  __shared__ float data_pack_shared[784];
  bgemm_local[(0)] = 0.000000e+00f;
  bgemm_local[(7)] = 0.000000e+00f;
  bgemm_local[(14)] = 0.000000e+00f;
  bgemm_local[(21)] = 0.000000e+00f;
  bgemm_local[(1)] = 0.000000e+00f;
  bgemm_local[(8)] = 0.000000e+00f;
  bgemm_local[(15)] = 0.000000e+00f;
  bgemm_local[(22)] = 0.000000e+00f;
  bgemm_local[(2)] = 0.000000e+00f;
  bgemm_local[(9)] = 0.000000e+00f;
  bgemm_local[(16)] = 0.000000e+00f;
  bgemm_local[(23)] = 0.000000e+00f;
  bgemm_local[(3)] = 0.000000e+00f;
  bgemm_local[(10)] = 0.000000e+00f;
  bgemm_local[(17)] = 0.000000e+00f;
  bgemm_local[(24)] = 0.000000e+00f;
  bgemm_local[(4)] = 0.000000e+00f;
  bgemm_local[(11)] = 0.000000e+00f;
  bgemm_local[(18)] = 0.000000e+00f;
  bgemm_local[(25)] = 0.000000e+00f;
  bgemm_local[(5)] = 0.000000e+00f;
  bgemm_local[(12)] = 0.000000e+00f;
  bgemm_local[(19)] = 0.000000e+00f;
  bgemm_local[(26)] = 0.000000e+00f;
  bgemm_local[(6)] = 0.000000e+00f;
  bgemm_local[(13)] = 0.000000e+00f;
  bgemm_local[(20)] = 0.000000e+00f;
  bgemm_local[(27)] = 0.000000e+00f;
  for (int ci_outer = 0; ci_outer < 32; ++ci_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 10; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) < 1024) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 16) + ((int)threadIdx.y)) < 147) {
          placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = placeholder[((((((((int)blockIdx.z) * 262144) + (ci_outer * 8192)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) >> 6) * 512)) + (((int)blockIdx.y) * 64)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 112) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) & 63)))];
        }
      }
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 112) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 25088) + (ci_outer * 784)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 112)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))];
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 16; ++ci_inner) {
      bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((ci_inner * 64) + ((int)threadIdx.y)))] * data_pack_shared[(((ci_inner * 49) + ((int)threadIdx.x)))]));
      bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 16))] * data_pack_shared[(((ci_inner * 49) + ((int)threadIdx.x)))]));
      bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 32))] * data_pack_shared[(((ci_inner * 49) + ((int)threadIdx.x)))]));
      bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 48))] * data_pack_shared[(((ci_inner * 49) + ((int)threadIdx.x)))]));
      bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((ci_inner * 64) + ((int)threadIdx.y)))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 7))]));
      bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 16))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 7))]));
      bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 32))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 7))]));
      bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 48))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 7))]));
      bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((ci_inner * 64) + ((int)threadIdx.y)))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 14))]));
      bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 16))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 14))]));
      bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 32))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 14))]));
      bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 48))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 14))]));
      bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((ci_inner * 64) + ((int)threadIdx.y)))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 21))]));
      bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 16))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 21))]));
      bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 32))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 21))]));
      bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 48))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 21))]));
      bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((ci_inner * 64) + ((int)threadIdx.y)))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 28))]));
      bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 16))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 28))]));
      bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 32))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 28))]));
      bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 48))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 28))]));
      bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((ci_inner * 64) + ((int)threadIdx.y)))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 35))]));
      bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 16))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 35))]));
      bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 32))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 35))]));
      bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 48))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 35))]));
      bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((ci_inner * 64) + ((int)threadIdx.y)))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 42))]));
      bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 16))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 42))]));
      bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 32))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 42))]));
      bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[((((ci_inner * 64) + ((int)threadIdx.y)) + 48))] * data_pack_shared[((((ci_inner * 49) + ((int)threadIdx.x)) + 42))]));
    }
  }
  bgemm[(((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)))] = bgemm_local[(0)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 784))] = bgemm_local[(7)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 1568))] = bgemm_local[(14)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 2352))] = bgemm_local[(21)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 7))] = bgemm_local[(1)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 791))] = bgemm_local[(8)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 1575))] = bgemm_local[(15)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 2359))] = bgemm_local[(22)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 14))] = bgemm_local[(2)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 798))] = bgemm_local[(9)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 1582))] = bgemm_local[(16)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 2366))] = bgemm_local[(23)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 21))] = bgemm_local[(3)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 805))] = bgemm_local[(10)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 1589))] = bgemm_local[(17)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 2373))] = bgemm_local[(24)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 28))] = bgemm_local[(4)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 812))] = bgemm_local[(11)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 1596))] = bgemm_local[(18)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 2380))] = bgemm_local[(25)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 35))] = bgemm_local[(5)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 819))] = bgemm_local[(12)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 1603))] = bgemm_local[(19)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 2387))] = bgemm_local[(26)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 42))] = bgemm_local[(6)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 826))] = bgemm_local[(13)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 1610))] = bgemm_local[(20)];
  bgemm[((((((((int)blockIdx.z) * 25088) + (((int)blockIdx.y) * 3136)) + (((int)threadIdx.y) * 49)) + ((int)threadIdx.x)) + 2394))] = bgemm_local[(27)];
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4_kernel2(float* __restrict__ bgemm, float* __restrict__ T_relu, float* __restrict__ placeholder) {
  float inverse[16];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((int)blockIdx.x) * 128) + ((int)threadIdx.x)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f));
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f));
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 250880))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 551936))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 852992))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1154048))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1455104))]);
  inverse[(4)] = 0.000000e+00f;
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f));
  inverse[(5)] = 0.000000e+00f;
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 5.000000e-01f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -2.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f) * -2.000000e+00f));
  inverse[(6)] = 0.000000e+00f;
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 5.000000e-01f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -2.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f) * 4.000000e+00f));
  inverse[(7)] = 0.000000e+00f;
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 551936))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 852992))]);
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 5.000000e-01f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1154048))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -2.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -2.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1455104))] * -2.000000e+00f));
  inverse[(8)] = 0.000000e+00f;
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f));
  inverse[(9)] = 0.000000e+00f;
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 2.500000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 2.500000e-01f) * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * 4.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 4.000000e+00f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f) * -2.000000e+00f));
  inverse[(10)] = 0.000000e+00f;
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 2.500000e-01f) * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 4.000000e+00f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f) * 4.000000e+00f));
  inverse[(11)] = 0.000000e+00f;
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 551936))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 852992))]);
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 2.500000e-01f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1154048))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * 4.000000e+00f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 4.000000e+00f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1455104))] * 4.000000e+00f));
  inverse[(12)] = 0.000000e+00f;
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1555456))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1655808))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(13)] = 0.000000e+00f;
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 1.250000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 1.250000e-01f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -8.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -8.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1555456))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1655808))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))] * -2.000000e+00f));
  inverse[(14)] = 0.000000e+00f;
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 1.250000e-01f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -8.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1555456))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1655808))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))] * 4.000000e+00f));
  inverse[(15)] = 0.000000e+00f;
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 551936))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 852992))]);
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 1.250000e-01f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1154048))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -8.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1455104))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1555456))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1655808))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1756160))]);
  for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      T_relu[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 224) + (ax2_inner * 56)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4)) + ax3_inner))] = max((inverse[(((ax2_inner * 4) + ax3_inner))] + placeholder[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 196))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4_kernel0(float* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[36];
  float data_pack_local[36];
  for (int eps = 0; eps < 6; ++eps) {
    for (int nu = 0; nu < 6; ++nu) {
      d[(((eps * 6) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 4) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 4) + eps) < 57)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4) + nu) < 57)) ? placeholder[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 224) + (eps * 56)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4)) + nu) - 57))] : 0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(1)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(3)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(4)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(6)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(7)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(8)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(9)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(12)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(13)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(14)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(15)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(18)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(19)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(20)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(21)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(24)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(28)]);
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(1)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(2)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(3)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(4)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(8)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(14)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(15)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(20)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(21)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(25)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(28)]);
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(2)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(3)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(4)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(7)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(8)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(9)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(13)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(14)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(15)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(19)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(20)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(21)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(28)]);
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(3)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(4)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(7)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(13)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(15)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(19)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(21)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(28)]);
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(1)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(3)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(4)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(7)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(9)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(13)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(15)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(19)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(21)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(28)]);
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(1)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(2)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(3)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(4)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(5)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(8)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(9)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(10)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(11)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(14)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(15)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(16)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(17)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(20)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(21)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(22)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(23)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(25)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(29)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(6)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(12)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(13)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(14)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(15)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(18)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(19)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(20)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(21)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(24)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(28)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(7)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(10)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(14)] * -2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(15)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(20)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(21)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(25)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(28)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(10)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(13)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(14)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(15)] * -2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(19)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(20)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(21)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(28)]);
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(13)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(15)] * -2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(19)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(21)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(28)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(13)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(15)] * -2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(19)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(21)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(28)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(14)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(15)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(16)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(17)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(20)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(21)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(22)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(23)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(25)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(29)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(7)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(8)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(9)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(12)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(13)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(14)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(15)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(18)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(19)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(20)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(21)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(24)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(28)]);
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(8)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(9)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(14)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(15)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(20)] * 2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(21)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(25)]);
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(28)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(7)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(8)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(9)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(13)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(14)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(15)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(19)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(20)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(21)] * 2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(28)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(7)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(9)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(13)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(15)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(19)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(21)] * 2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(28)]);
  data_pack_local[(16)] = 0.000000e+00f;
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(7)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(9)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(13)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(15)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(19)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(21)] * 2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + d[(28)]);
  data_pack_local[(17)] = 0.000000e+00f;
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(8)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(9)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(10)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(14)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(15)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(16)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(17)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(20)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(21)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(22)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(23)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(25)]);
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(29)]);
  data_pack_local[(18)] = 0.000000e+00f;
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(6)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(7)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(8)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(9)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(18)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(19)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(20)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(21)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(24)]);
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(28)]);
  data_pack_local[(19)] = 0.000000e+00f;
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(8)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(9)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(20)] * 2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(21)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(25)]);
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(28)]);
  data_pack_local[(20)] = 0.000000e+00f;
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(7)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(8)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(9)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(19)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(20)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(21)] * 2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + d[(28)]);
  data_pack_local[(21)] = 0.000000e+00f;
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(7)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(9)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(19)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(21)] * 2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + d[(28)]);
  data_pack_local[(22)] = 0.000000e+00f;
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(7)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(9)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(19)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(21)] * 2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + d[(28)]);
  data_pack_local[(23)] = 0.000000e+00f;
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(8)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(9)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(10)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(11)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(20)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(21)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(22)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(23)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(25)]);
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(29)]);
  data_pack_local[(24)] = 0.000000e+00f;
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(6)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(7)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(8)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(9)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(18)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(19)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(20)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(21)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(24)]);
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(28)]);
  data_pack_local[(25)] = 0.000000e+00f;
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(8)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(9)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(20)] * -5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(21)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(25)]);
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(28)]);
  data_pack_local[(26)] = 0.000000e+00f;
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(7)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(8)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(9)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(19)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(20)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(21)] * -5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + d[(28)]);
  data_pack_local[(27)] = 0.000000e+00f;
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(7)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(9)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(19)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(21)] * -5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + d[(28)]);
  data_pack_local[(28)] = 0.000000e+00f;
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(7)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(9)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(19)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(21)] * -5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + d[(28)]);
  data_pack_local[(29)] = 0.000000e+00f;
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(8)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(9)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(10)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(11)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(20)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(21)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(22)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(23)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(25)]);
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(29)]);
  data_pack_local[(30)] = 0.000000e+00f;
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(6)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(10)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(12)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(13)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(14)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(15)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(18)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(19)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(20)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(21)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(24)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(25)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(26)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(27)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(30)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(31)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(32)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(33)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(34)]);
  data_pack_local[(31)] = 0.000000e+00f;
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(7)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(10)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(14)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(15)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(20)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(21)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(26)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(27)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(31)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(32)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(33)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(34)]);
  data_pack_local[(32)] = 0.000000e+00f;
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(10)]);
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(13)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(14)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(15)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(19)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(20)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(21)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(25)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(26)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(27)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(31)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(32)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(33)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(34)]);
  data_pack_local[(33)] = 0.000000e+00f;
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(10)]);
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(13)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(15)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(19)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(21)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(25)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(27)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(31)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(33)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(34)]);
  data_pack_local[(34)] = 0.000000e+00f;
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(10)]);
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(13)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(15)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(19)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(21)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(25)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(27)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(31)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(33)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(34)]);
  data_pack_local[(35)] = 0.000000e+00f;
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(7)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(11)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(14)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(15)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(16)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(17)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(20)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(21)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(22)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(23)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(26)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(27)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(28)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(29)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(31)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(32)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(33)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(34)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(35)]);
  for (int eps1 = 0; eps1 < 6; ++eps1) {
    for (int nu1 = 0; nu1 < 6; ++nu1) {
      data_pack[(((((eps1 * 150528) + (nu1 * 25088)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 6) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2(float* __restrict__ bgemm, float* __restrict__ T_relu, float* __restrict__ placeholder) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((int)blockIdx.x) * 128) + ((int)threadIdx.x)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 25088))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 125440))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 225792))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 250880))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 25088))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 75264))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 125440))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 175616))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 225792))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 250880))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 275968))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 125440))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 225792))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 250880))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 326144))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 125440))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 175616))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 225792))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 250880))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 275968))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 326144))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 376320))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      T_relu[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 7) * 28) + (ax2_inner * 14)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2)) + ax3_inner))] = max((inverse[(((ax2_inner * 2) + ax3_inner))] + placeholder[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 49))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0(float* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[36];
  float data_pack_local[36];
  for (int eps = 0; eps < 6; ++eps) {
    for (int nu = 0; nu < 6; ++nu) {
      d[(((eps * 6) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 4) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 4) + eps) < 57)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4) + nu) < 57)) ? placeholder[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 224) + (eps * 56)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4)) + nu) - 57))] : 0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(1)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(3)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(4)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(6)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(7)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(8)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(9)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(12)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(13)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(14)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(15)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(18)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(19)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(20)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(21)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(24)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(28)]);
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(1)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(2)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(3)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(4)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(8)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(14)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(15)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(20)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(21)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(25)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(28)]);
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(2)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(3)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(4)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(7)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(8)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(9)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(13)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(14)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(15)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(19)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(20)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(21)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(28)]);
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(3)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(4)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(7)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(13)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(15)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(19)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(21)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(28)]);
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(1)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(3)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(4)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(7)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(9)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(13)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(15)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(19)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(21)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(28)]);
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(1)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(2)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(3)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(4)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(5)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(8)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(9)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(10)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(11)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(14)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(15)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(16)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(17)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(20)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(21)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(22)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(23)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(25)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(29)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(6)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(12)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(13)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(14)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(15)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(18)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(19)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(20)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(21)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(24)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(28)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(7)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(10)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(14)] * -2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(15)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(20)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(21)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(25)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(28)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(10)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(13)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(14)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(15)] * -2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(19)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(20)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(21)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(28)]);
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(13)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(15)] * -2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(19)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(21)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(28)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(13)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(15)] * -2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(19)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(21)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(28)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(14)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(15)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(16)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(17)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(20)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(21)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(22)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(23)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(25)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(29)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(7)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(8)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(9)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(12)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(13)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(14)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(15)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(18)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(19)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(20)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(21)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(24)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(28)]);
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(8)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(9)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(14)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(15)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(20)] * 2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(21)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(25)]);
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(28)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(7)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(8)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(9)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(13)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(14)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(15)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(19)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(20)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(21)] * 2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(28)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(7)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(9)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(13)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(15)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(19)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(21)] * 2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(28)]);
  data_pack_local[(16)] = 0.000000e+00f;
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(7)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(9)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(13)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(15)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(19)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(21)] * 2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + d[(28)]);
  data_pack_local[(17)] = 0.000000e+00f;
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(8)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(9)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(10)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(14)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(15)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(16)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(17)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(20)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(21)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(22)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(23)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(25)]);
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(29)]);
  data_pack_local[(18)] = 0.000000e+00f;
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(6)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(7)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(8)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(9)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(18)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(19)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(20)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(21)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(24)]);
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(28)]);
  data_pack_local[(19)] = 0.000000e+00f;
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(8)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(9)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(20)] * 2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(21)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(25)]);
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(28)]);
  data_pack_local[(20)] = 0.000000e+00f;
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(7)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(8)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(9)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(19)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(20)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(21)] * 2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + d[(28)]);
  data_pack_local[(21)] = 0.000000e+00f;
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(7)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(9)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(19)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(21)] * 2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + d[(28)]);
  data_pack_local[(22)] = 0.000000e+00f;
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(7)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(9)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(19)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(21)] * 2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + d[(28)]);
  data_pack_local[(23)] = 0.000000e+00f;
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(8)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(9)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(10)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(11)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(20)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(21)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(22)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(23)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(25)]);
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(29)]);
  data_pack_local[(24)] = 0.000000e+00f;
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(6)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(7)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(8)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(9)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(18)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(19)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(20)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(21)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(24)]);
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(28)]);
  data_pack_local[(25)] = 0.000000e+00f;
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(8)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(9)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(20)] * -5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(21)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(25)]);
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(28)]);
  data_pack_local[(26)] = 0.000000e+00f;
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(7)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(8)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(9)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(19)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(20)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(21)] * -5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + d[(28)]);
  data_pack_local[(27)] = 0.000000e+00f;
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(7)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(9)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(19)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(21)] * -5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + d[(28)]);
  data_pack_local[(28)] = 0.000000e+00f;
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(7)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(9)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(19)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(21)] * -5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + d[(28)]);
  data_pack_local[(29)] = 0.000000e+00f;
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(8)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(9)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(10)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(11)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(20)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(21)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(22)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(23)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(25)]);
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(29)]);
  data_pack_local[(30)] = 0.000000e+00f;
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(6)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(10)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(12)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(13)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(14)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(15)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(18)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(19)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(20)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(21)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(24)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(25)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(26)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(27)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(30)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(31)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(32)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(33)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(34)]);
  data_pack_local[(31)] = 0.000000e+00f;
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(7)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(10)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(14)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(15)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(20)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(21)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(26)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(27)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(31)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(32)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(33)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(34)]);
  data_pack_local[(32)] = 0.000000e+00f;
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(10)]);
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(13)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(14)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(15)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(19)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(20)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(21)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(25)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(26)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(27)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(31)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(32)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(33)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(34)]);
  data_pack_local[(33)] = 0.000000e+00f;
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(10)]);
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(13)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(15)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(19)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(21)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(25)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(27)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(31)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(33)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(34)]);
  data_pack_local[(34)] = 0.000000e+00f;
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(10)]);
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(13)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(15)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(19)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(21)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(25)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(27)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(31)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(33)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(34)]);
  data_pack_local[(35)] = 0.000000e+00f;
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(7)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(11)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(14)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(15)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(16)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(17)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(20)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(21)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(22)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(23)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(26)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(27)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(28)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(29)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(31)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(32)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(33)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(34)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(35)]);
  for (int eps1 = 0; eps1 < 6; ++eps1) {
    for (int nu1 = 0; nu1 < 6; ++nu1) {
      data_pack[(((((eps1 * 301056) + (nu1 * 50176)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 6) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_max_pool2d_1_kernel0(float* __restrict__ placeholder, float* __restrict__ tensor) {
  float tensor_local[1];
  tensor_local[(0)] = -3.402823e+38f;
  for (int dh = 0; dh < 2; ++dh) {
    for (int dw = 0; dw < 2; ++dw) {
      tensor_local[(0)] = max(tensor_local[(0)], placeholder[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 14) * 56) + (dh * 28)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 14) * 2)) + dw))]);
    }
  }
  tensor[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = tensor_local[(0)];
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0(float* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 2) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 2) + eps) < 15)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2) + nu) < 15)) ? placeholder[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 7) * 28) + (eps * 14)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2)) + nu) - 15))] : 0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 100352) + (nu1 * 25088)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4_kernel1(float* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[28];
  __shared__ float placeholder_shared[1024];
  __shared__ float data_pack_shared[224];
  for (int co_c_init = 0; co_c_init < 4; ++co_c_init) {
    bgemm_local[(co_c_init)] = 0.000000e+00f;
    bgemm_local[((co_c_init + 4))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 8))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 12))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 16))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 20))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 24))] = 0.000000e+00f;
  }
  for (int ci_outer = 0; ci_outer < 16; ++ci_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder[(((((((((int)blockIdx.z) * 32768) + (ci_outer * 2048)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 224) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 32) + ((int)threadIdx.y)) < 56) {
          data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 25088) + (ci_outer * 1568)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 28) * 196)) + (((int)blockIdx.x) * 28)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 28)))];
        }
      }
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 8; ++ci_inner) {
      for (int co_c = 0; co_c < 4; ++co_c) {
        bgemm_local[(co_c)] = (bgemm_local[(co_c)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[(((ci_inner * 28) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 4))] = (bgemm_local[((co_c + 4))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 4))]));
        bgemm_local[((co_c + 8))] = (bgemm_local[((co_c + 8))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 8))]));
        bgemm_local[((co_c + 12))] = (bgemm_local[((co_c + 12))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 12))]));
        bgemm_local[((co_c + 16))] = (bgemm_local[((co_c + 16))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 20))] = (bgemm_local[((co_c + 20))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 20))]));
        bgemm_local[((co_c + 24))] = (bgemm_local[((co_c + 24))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 24))]));
      }
    }
  }
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 4; ++co_inner_inner_inner) {
    bgemm[(((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)))] = bgemm_local[(co_inner_inner_inner)];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 4))] = bgemm_local[((co_inner_inner_inner + 4))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 8))] = bgemm_local[((co_inner_inner_inner + 8))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 12))] = bgemm_local[((co_inner_inner_inner + 12))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 16))] = bgemm_local[((co_inner_inner_inner + 16))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 20))] = bgemm_local[((co_inner_inner_inner + 20))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 24))] = bgemm_local[((co_inner_inner_inner + 24))];
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1(float* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[56];
  __shared__ float placeholder_shared[2048];
  __shared__ float data_pack_shared[224];
  bgemm_local[(0)] = 0.000000e+00f;
  bgemm_local[(28)] = 0.000000e+00f;
  bgemm_local[(4)] = 0.000000e+00f;
  bgemm_local[(32)] = 0.000000e+00f;
  bgemm_local[(8)] = 0.000000e+00f;
  bgemm_local[(36)] = 0.000000e+00f;
  bgemm_local[(12)] = 0.000000e+00f;
  bgemm_local[(40)] = 0.000000e+00f;
  bgemm_local[(16)] = 0.000000e+00f;
  bgemm_local[(44)] = 0.000000e+00f;
  bgemm_local[(20)] = 0.000000e+00f;
  bgemm_local[(48)] = 0.000000e+00f;
  bgemm_local[(24)] = 0.000000e+00f;
  bgemm_local[(52)] = 0.000000e+00f;
  bgemm_local[(1)] = 0.000000e+00f;
  bgemm_local[(29)] = 0.000000e+00f;
  bgemm_local[(5)] = 0.000000e+00f;
  bgemm_local[(33)] = 0.000000e+00f;
  bgemm_local[(9)] = 0.000000e+00f;
  bgemm_local[(37)] = 0.000000e+00f;
  bgemm_local[(13)] = 0.000000e+00f;
  bgemm_local[(41)] = 0.000000e+00f;
  bgemm_local[(17)] = 0.000000e+00f;
  bgemm_local[(45)] = 0.000000e+00f;
  bgemm_local[(21)] = 0.000000e+00f;
  bgemm_local[(49)] = 0.000000e+00f;
  bgemm_local[(25)] = 0.000000e+00f;
  bgemm_local[(53)] = 0.000000e+00f;
  bgemm_local[(2)] = 0.000000e+00f;
  bgemm_local[(30)] = 0.000000e+00f;
  bgemm_local[(6)] = 0.000000e+00f;
  bgemm_local[(34)] = 0.000000e+00f;
  bgemm_local[(10)] = 0.000000e+00f;
  bgemm_local[(38)] = 0.000000e+00f;
  bgemm_local[(14)] = 0.000000e+00f;
  bgemm_local[(42)] = 0.000000e+00f;
  bgemm_local[(18)] = 0.000000e+00f;
  bgemm_local[(46)] = 0.000000e+00f;
  bgemm_local[(22)] = 0.000000e+00f;
  bgemm_local[(50)] = 0.000000e+00f;
  bgemm_local[(26)] = 0.000000e+00f;
  bgemm_local[(54)] = 0.000000e+00f;
  bgemm_local[(3)] = 0.000000e+00f;
  bgemm_local[(31)] = 0.000000e+00f;
  bgemm_local[(7)] = 0.000000e+00f;
  bgemm_local[(35)] = 0.000000e+00f;
  bgemm_local[(11)] = 0.000000e+00f;
  bgemm_local[(39)] = 0.000000e+00f;
  bgemm_local[(15)] = 0.000000e+00f;
  bgemm_local[(43)] = 0.000000e+00f;
  bgemm_local[(19)] = 0.000000e+00f;
  bgemm_local[(47)] = 0.000000e+00f;
  bgemm_local[(23)] = 0.000000e+00f;
  bgemm_local[(51)] = 0.000000e+00f;
  bgemm_local[(27)] = 0.000000e+00f;
  bgemm_local[(55)] = 0.000000e+00f;
  for (int ci_outer = 0; ci_outer < 64; ++ci_outer) {
    __syncthreads();
    placeholder_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)))] = placeholder[((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128))] = placeholder[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 128))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 256))] = placeholder[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 512))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 384))] = placeholder[((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 384) >> 8) * 512)) + (((int)blockIdx.y) * 256)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128)))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 512))] = placeholder[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 1024))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 640))] = placeholder[((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 640) >> 8) * 512)) + (((int)blockIdx.y) * 256)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128)))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 768))] = placeholder[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 1536))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 896))] = placeholder[((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 896) >> 8) * 512)) + (((int)blockIdx.y) * 256)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128)))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1024))] = placeholder[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 2048))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1152))] = placeholder[((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1152) >> 8) * 512)) + (((int)blockIdx.y) * 256)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128)))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1280))] = placeholder[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 2560))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1408))] = placeholder[((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1408) >> 8) * 512)) + (((int)blockIdx.y) * 256)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128)))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1536))] = placeholder[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 3072))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1664))] = placeholder[((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1664) >> 8) * 512)) + (((int)blockIdx.y) * 256)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128)))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1792))] = placeholder[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 3584))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1920))] = placeholder[((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 1920) >> 8) * 512)) + (((int)blockIdx.y) * 256)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128)))];
    data_pack_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 100352) + (ci_outer * 1568)) + ((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) / 28) * 196)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) % 28)))];
    if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 96) {
      if (((int)threadIdx.y) < 24) {
        data_pack_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128))] = data_pack[((((((((int)blockIdx.z) * 100352) + (ci_outer * 1568)) + (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128) / 28) * 196)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16) % 28)))];
      }
    }
    __syncthreads();
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[((((int)threadIdx.y) * 4))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 128))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[((((int)threadIdx.y) * 4))] * data_pack_shared[((((int)threadIdx.x) + 4))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 128))] * data_pack_shared[((((int)threadIdx.x) + 4))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[((((int)threadIdx.y) * 4))] * data_pack_shared[((((int)threadIdx.x) + 8))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 128))] * data_pack_shared[((((int)threadIdx.x) + 8))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[((((int)threadIdx.y) * 4))] * data_pack_shared[((((int)threadIdx.x) + 12))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 128))] * data_pack_shared[((((int)threadIdx.x) + 12))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[((((int)threadIdx.y) * 4))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 128))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[((((int)threadIdx.y) * 4))] * data_pack_shared[((((int)threadIdx.x) + 20))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 128))] * data_pack_shared[((((int)threadIdx.x) + 20))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[((((int)threadIdx.y) * 4))] * data_pack_shared[((((int)threadIdx.x) + 24))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 128))] * data_pack_shared[((((int)threadIdx.x) + 24))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 129))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1))] * data_pack_shared[((((int)threadIdx.x) + 4))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 129))] * data_pack_shared[((((int)threadIdx.x) + 4))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1))] * data_pack_shared[((((int)threadIdx.x) + 8))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 129))] * data_pack_shared[((((int)threadIdx.x) + 8))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1))] * data_pack_shared[((((int)threadIdx.x) + 12))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 129))] * data_pack_shared[((((int)threadIdx.x) + 12))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 129))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1))] * data_pack_shared[((((int)threadIdx.x) + 20))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 129))] * data_pack_shared[((((int)threadIdx.x) + 20))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1))] * data_pack_shared[((((int)threadIdx.x) + 24))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 129))] * data_pack_shared[((((int)threadIdx.x) + 24))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 2))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 130))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 2))] * data_pack_shared[((((int)threadIdx.x) + 4))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 130))] * data_pack_shared[((((int)threadIdx.x) + 4))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 2))] * data_pack_shared[((((int)threadIdx.x) + 8))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 130))] * data_pack_shared[((((int)threadIdx.x) + 8))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 2))] * data_pack_shared[((((int)threadIdx.x) + 12))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 130))] * data_pack_shared[((((int)threadIdx.x) + 12))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 2))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 130))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 2))] * data_pack_shared[((((int)threadIdx.x) + 20))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 130))] * data_pack_shared[((((int)threadIdx.x) + 20))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 2))] * data_pack_shared[((((int)threadIdx.x) + 24))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 130))] * data_pack_shared[((((int)threadIdx.x) + 24))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 3))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 131))] * data_pack_shared[(((int)threadIdx.x))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 3))] * data_pack_shared[((((int)threadIdx.x) + 4))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 131))] * data_pack_shared[((((int)threadIdx.x) + 4))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 3))] * data_pack_shared[((((int)threadIdx.x) + 8))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 131))] * data_pack_shared[((((int)threadIdx.x) + 8))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 3))] * data_pack_shared[((((int)threadIdx.x) + 12))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 131))] * data_pack_shared[((((int)threadIdx.x) + 12))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 3))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 131))] * data_pack_shared[((((int)threadIdx.x) + 16))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 3))] * data_pack_shared[((((int)threadIdx.x) + 20))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 131))] * data_pack_shared[((((int)threadIdx.x) + 20))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 3))] * data_pack_shared[((((int)threadIdx.x) + 24))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 131))] * data_pack_shared[((((int)threadIdx.x) + 24))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 256))] * data_pack_shared[((((int)threadIdx.x) + 28))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 384))] * data_pack_shared[((((int)threadIdx.x) + 28))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 256))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 384))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 256))] * data_pack_shared[((((int)threadIdx.x) + 36))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 384))] * data_pack_shared[((((int)threadIdx.x) + 36))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 256))] * data_pack_shared[((((int)threadIdx.x) + 40))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 384))] * data_pack_shared[((((int)threadIdx.x) + 40))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 256))] * data_pack_shared[((((int)threadIdx.x) + 44))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 384))] * data_pack_shared[((((int)threadIdx.x) + 44))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 256))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 384))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 256))] * data_pack_shared[((((int)threadIdx.x) + 52))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 384))] * data_pack_shared[((((int)threadIdx.x) + 52))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 257))] * data_pack_shared[((((int)threadIdx.x) + 28))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 385))] * data_pack_shared[((((int)threadIdx.x) + 28))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 257))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 385))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 257))] * data_pack_shared[((((int)threadIdx.x) + 36))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 385))] * data_pack_shared[((((int)threadIdx.x) + 36))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 257))] * data_pack_shared[((((int)threadIdx.x) + 40))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 385))] * data_pack_shared[((((int)threadIdx.x) + 40))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 257))] * data_pack_shared[((((int)threadIdx.x) + 44))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 385))] * data_pack_shared[((((int)threadIdx.x) + 44))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 257))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 385))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 257))] * data_pack_shared[((((int)threadIdx.x) + 52))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 385))] * data_pack_shared[((((int)threadIdx.x) + 52))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 258))] * data_pack_shared[((((int)threadIdx.x) + 28))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 386))] * data_pack_shared[((((int)threadIdx.x) + 28))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 258))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 386))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 258))] * data_pack_shared[((((int)threadIdx.x) + 36))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 386))] * data_pack_shared[((((int)threadIdx.x) + 36))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 258))] * data_pack_shared[((((int)threadIdx.x) + 40))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 386))] * data_pack_shared[((((int)threadIdx.x) + 40))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 258))] * data_pack_shared[((((int)threadIdx.x) + 44))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 386))] * data_pack_shared[((((int)threadIdx.x) + 44))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 258))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 386))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 258))] * data_pack_shared[((((int)threadIdx.x) + 52))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 386))] * data_pack_shared[((((int)threadIdx.x) + 52))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 259))] * data_pack_shared[((((int)threadIdx.x) + 28))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 387))] * data_pack_shared[((((int)threadIdx.x) + 28))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 259))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 387))] * data_pack_shared[((((int)threadIdx.x) + 32))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 259))] * data_pack_shared[((((int)threadIdx.x) + 36))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 387))] * data_pack_shared[((((int)threadIdx.x) + 36))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 259))] * data_pack_shared[((((int)threadIdx.x) + 40))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 387))] * data_pack_shared[((((int)threadIdx.x) + 40))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 259))] * data_pack_shared[((((int)threadIdx.x) + 44))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 387))] * data_pack_shared[((((int)threadIdx.x) + 44))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 259))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 387))] * data_pack_shared[((((int)threadIdx.x) + 48))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 259))] * data_pack_shared[((((int)threadIdx.x) + 52))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 387))] * data_pack_shared[((((int)threadIdx.x) + 52))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 512))] * data_pack_shared[((((int)threadIdx.x) + 56))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 640))] * data_pack_shared[((((int)threadIdx.x) + 56))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 512))] * data_pack_shared[((((int)threadIdx.x) + 60))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 640))] * data_pack_shared[((((int)threadIdx.x) + 60))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 512))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 640))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 512))] * data_pack_shared[((((int)threadIdx.x) + 68))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 640))] * data_pack_shared[((((int)threadIdx.x) + 68))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 512))] * data_pack_shared[((((int)threadIdx.x) + 72))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 640))] * data_pack_shared[((((int)threadIdx.x) + 72))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 512))] * data_pack_shared[((((int)threadIdx.x) + 76))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 640))] * data_pack_shared[((((int)threadIdx.x) + 76))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 512))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 640))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 513))] * data_pack_shared[((((int)threadIdx.x) + 56))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 641))] * data_pack_shared[((((int)threadIdx.x) + 56))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 513))] * data_pack_shared[((((int)threadIdx.x) + 60))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 641))] * data_pack_shared[((((int)threadIdx.x) + 60))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 513))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 641))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 513))] * data_pack_shared[((((int)threadIdx.x) + 68))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 641))] * data_pack_shared[((((int)threadIdx.x) + 68))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 513))] * data_pack_shared[((((int)threadIdx.x) + 72))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 641))] * data_pack_shared[((((int)threadIdx.x) + 72))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 513))] * data_pack_shared[((((int)threadIdx.x) + 76))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 641))] * data_pack_shared[((((int)threadIdx.x) + 76))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 513))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 641))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 514))] * data_pack_shared[((((int)threadIdx.x) + 56))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 642))] * data_pack_shared[((((int)threadIdx.x) + 56))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 514))] * data_pack_shared[((((int)threadIdx.x) + 60))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 642))] * data_pack_shared[((((int)threadIdx.x) + 60))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 514))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 642))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 514))] * data_pack_shared[((((int)threadIdx.x) + 68))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 642))] * data_pack_shared[((((int)threadIdx.x) + 68))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 514))] * data_pack_shared[((((int)threadIdx.x) + 72))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 642))] * data_pack_shared[((((int)threadIdx.x) + 72))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 514))] * data_pack_shared[((((int)threadIdx.x) + 76))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 642))] * data_pack_shared[((((int)threadIdx.x) + 76))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 514))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 642))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 515))] * data_pack_shared[((((int)threadIdx.x) + 56))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 643))] * data_pack_shared[((((int)threadIdx.x) + 56))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 515))] * data_pack_shared[((((int)threadIdx.x) + 60))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 643))] * data_pack_shared[((((int)threadIdx.x) + 60))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 515))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 643))] * data_pack_shared[((((int)threadIdx.x) + 64))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 515))] * data_pack_shared[((((int)threadIdx.x) + 68))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 643))] * data_pack_shared[((((int)threadIdx.x) + 68))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 515))] * data_pack_shared[((((int)threadIdx.x) + 72))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 643))] * data_pack_shared[((((int)threadIdx.x) + 72))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 515))] * data_pack_shared[((((int)threadIdx.x) + 76))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 643))] * data_pack_shared[((((int)threadIdx.x) + 76))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 515))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 643))] * data_pack_shared[((((int)threadIdx.x) + 80))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 768))] * data_pack_shared[((((int)threadIdx.x) + 84))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 896))] * data_pack_shared[((((int)threadIdx.x) + 84))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 768))] * data_pack_shared[((((int)threadIdx.x) + 88))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 896))] * data_pack_shared[((((int)threadIdx.x) + 88))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 768))] * data_pack_shared[((((int)threadIdx.x) + 92))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 896))] * data_pack_shared[((((int)threadIdx.x) + 92))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 768))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 896))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 768))] * data_pack_shared[((((int)threadIdx.x) + 100))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 896))] * data_pack_shared[((((int)threadIdx.x) + 100))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 768))] * data_pack_shared[((((int)threadIdx.x) + 104))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 896))] * data_pack_shared[((((int)threadIdx.x) + 104))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 768))] * data_pack_shared[((((int)threadIdx.x) + 108))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 896))] * data_pack_shared[((((int)threadIdx.x) + 108))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 769))] * data_pack_shared[((((int)threadIdx.x) + 84))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 897))] * data_pack_shared[((((int)threadIdx.x) + 84))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 769))] * data_pack_shared[((((int)threadIdx.x) + 88))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 897))] * data_pack_shared[((((int)threadIdx.x) + 88))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 769))] * data_pack_shared[((((int)threadIdx.x) + 92))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 897))] * data_pack_shared[((((int)threadIdx.x) + 92))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 769))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 897))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 769))] * data_pack_shared[((((int)threadIdx.x) + 100))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 897))] * data_pack_shared[((((int)threadIdx.x) + 100))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 769))] * data_pack_shared[((((int)threadIdx.x) + 104))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 897))] * data_pack_shared[((((int)threadIdx.x) + 104))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 769))] * data_pack_shared[((((int)threadIdx.x) + 108))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 897))] * data_pack_shared[((((int)threadIdx.x) + 108))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 770))] * data_pack_shared[((((int)threadIdx.x) + 84))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 898))] * data_pack_shared[((((int)threadIdx.x) + 84))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 770))] * data_pack_shared[((((int)threadIdx.x) + 88))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 898))] * data_pack_shared[((((int)threadIdx.x) + 88))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 770))] * data_pack_shared[((((int)threadIdx.x) + 92))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 898))] * data_pack_shared[((((int)threadIdx.x) + 92))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 770))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 898))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 770))] * data_pack_shared[((((int)threadIdx.x) + 100))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 898))] * data_pack_shared[((((int)threadIdx.x) + 100))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 770))] * data_pack_shared[((((int)threadIdx.x) + 104))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 898))] * data_pack_shared[((((int)threadIdx.x) + 104))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 770))] * data_pack_shared[((((int)threadIdx.x) + 108))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 898))] * data_pack_shared[((((int)threadIdx.x) + 108))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 771))] * data_pack_shared[((((int)threadIdx.x) + 84))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 899))] * data_pack_shared[((((int)threadIdx.x) + 84))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 771))] * data_pack_shared[((((int)threadIdx.x) + 88))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 899))] * data_pack_shared[((((int)threadIdx.x) + 88))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 771))] * data_pack_shared[((((int)threadIdx.x) + 92))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 899))] * data_pack_shared[((((int)threadIdx.x) + 92))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 771))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 899))] * data_pack_shared[((((int)threadIdx.x) + 96))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 771))] * data_pack_shared[((((int)threadIdx.x) + 100))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 899))] * data_pack_shared[((((int)threadIdx.x) + 100))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 771))] * data_pack_shared[((((int)threadIdx.x) + 104))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 899))] * data_pack_shared[((((int)threadIdx.x) + 104))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 771))] * data_pack_shared[((((int)threadIdx.x) + 108))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 899))] * data_pack_shared[((((int)threadIdx.x) + 108))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1024))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1152))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1024))] * data_pack_shared[((((int)threadIdx.x) + 116))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1152))] * data_pack_shared[((((int)threadIdx.x) + 116))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1024))] * data_pack_shared[((((int)threadIdx.x) + 120))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1152))] * data_pack_shared[((((int)threadIdx.x) + 120))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1024))] * data_pack_shared[((((int)threadIdx.x) + 124))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1152))] * data_pack_shared[((((int)threadIdx.x) + 124))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1024))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1152))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1024))] * data_pack_shared[((((int)threadIdx.x) + 132))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1152))] * data_pack_shared[((((int)threadIdx.x) + 132))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1024))] * data_pack_shared[((((int)threadIdx.x) + 136))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1152))] * data_pack_shared[((((int)threadIdx.x) + 136))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1025))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1153))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1025))] * data_pack_shared[((((int)threadIdx.x) + 116))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1153))] * data_pack_shared[((((int)threadIdx.x) + 116))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1025))] * data_pack_shared[((((int)threadIdx.x) + 120))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1153))] * data_pack_shared[((((int)threadIdx.x) + 120))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1025))] * data_pack_shared[((((int)threadIdx.x) + 124))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1153))] * data_pack_shared[((((int)threadIdx.x) + 124))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1025))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1153))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1025))] * data_pack_shared[((((int)threadIdx.x) + 132))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1153))] * data_pack_shared[((((int)threadIdx.x) + 132))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1025))] * data_pack_shared[((((int)threadIdx.x) + 136))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1153))] * data_pack_shared[((((int)threadIdx.x) + 136))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1026))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1154))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1026))] * data_pack_shared[((((int)threadIdx.x) + 116))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1154))] * data_pack_shared[((((int)threadIdx.x) + 116))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1026))] * data_pack_shared[((((int)threadIdx.x) + 120))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1154))] * data_pack_shared[((((int)threadIdx.x) + 120))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1026))] * data_pack_shared[((((int)threadIdx.x) + 124))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1154))] * data_pack_shared[((((int)threadIdx.x) + 124))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1026))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1154))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1026))] * data_pack_shared[((((int)threadIdx.x) + 132))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1154))] * data_pack_shared[((((int)threadIdx.x) + 132))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1026))] * data_pack_shared[((((int)threadIdx.x) + 136))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1154))] * data_pack_shared[((((int)threadIdx.x) + 136))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1027))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1155))] * data_pack_shared[((((int)threadIdx.x) + 112))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1027))] * data_pack_shared[((((int)threadIdx.x) + 116))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1155))] * data_pack_shared[((((int)threadIdx.x) + 116))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1027))] * data_pack_shared[((((int)threadIdx.x) + 120))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1155))] * data_pack_shared[((((int)threadIdx.x) + 120))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1027))] * data_pack_shared[((((int)threadIdx.x) + 124))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1155))] * data_pack_shared[((((int)threadIdx.x) + 124))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1027))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1155))] * data_pack_shared[((((int)threadIdx.x) + 128))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1027))] * data_pack_shared[((((int)threadIdx.x) + 132))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1155))] * data_pack_shared[((((int)threadIdx.x) + 132))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1027))] * data_pack_shared[((((int)threadIdx.x) + 136))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1155))] * data_pack_shared[((((int)threadIdx.x) + 136))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1280))] * data_pack_shared[((((int)threadIdx.x) + 140))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1408))] * data_pack_shared[((((int)threadIdx.x) + 140))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1280))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1408))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1280))] * data_pack_shared[((((int)threadIdx.x) + 148))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1408))] * data_pack_shared[((((int)threadIdx.x) + 148))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1280))] * data_pack_shared[((((int)threadIdx.x) + 152))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1408))] * data_pack_shared[((((int)threadIdx.x) + 152))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1280))] * data_pack_shared[((((int)threadIdx.x) + 156))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1408))] * data_pack_shared[((((int)threadIdx.x) + 156))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1280))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1408))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1280))] * data_pack_shared[((((int)threadIdx.x) + 164))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1408))] * data_pack_shared[((((int)threadIdx.x) + 164))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1281))] * data_pack_shared[((((int)threadIdx.x) + 140))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1409))] * data_pack_shared[((((int)threadIdx.x) + 140))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1281))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1409))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1281))] * data_pack_shared[((((int)threadIdx.x) + 148))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1409))] * data_pack_shared[((((int)threadIdx.x) + 148))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1281))] * data_pack_shared[((((int)threadIdx.x) + 152))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1409))] * data_pack_shared[((((int)threadIdx.x) + 152))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1281))] * data_pack_shared[((((int)threadIdx.x) + 156))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1409))] * data_pack_shared[((((int)threadIdx.x) + 156))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1281))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1409))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1281))] * data_pack_shared[((((int)threadIdx.x) + 164))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1409))] * data_pack_shared[((((int)threadIdx.x) + 164))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1282))] * data_pack_shared[((((int)threadIdx.x) + 140))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1410))] * data_pack_shared[((((int)threadIdx.x) + 140))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1282))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1410))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1282))] * data_pack_shared[((((int)threadIdx.x) + 148))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1410))] * data_pack_shared[((((int)threadIdx.x) + 148))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1282))] * data_pack_shared[((((int)threadIdx.x) + 152))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1410))] * data_pack_shared[((((int)threadIdx.x) + 152))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1282))] * data_pack_shared[((((int)threadIdx.x) + 156))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1410))] * data_pack_shared[((((int)threadIdx.x) + 156))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1282))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1410))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1282))] * data_pack_shared[((((int)threadIdx.x) + 164))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1410))] * data_pack_shared[((((int)threadIdx.x) + 164))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1283))] * data_pack_shared[((((int)threadIdx.x) + 140))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1411))] * data_pack_shared[((((int)threadIdx.x) + 140))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1283))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1411))] * data_pack_shared[((((int)threadIdx.x) + 144))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1283))] * data_pack_shared[((((int)threadIdx.x) + 148))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1411))] * data_pack_shared[((((int)threadIdx.x) + 148))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1283))] * data_pack_shared[((((int)threadIdx.x) + 152))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1411))] * data_pack_shared[((((int)threadIdx.x) + 152))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1283))] * data_pack_shared[((((int)threadIdx.x) + 156))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1411))] * data_pack_shared[((((int)threadIdx.x) + 156))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1283))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1411))] * data_pack_shared[((((int)threadIdx.x) + 160))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1283))] * data_pack_shared[((((int)threadIdx.x) + 164))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1411))] * data_pack_shared[((((int)threadIdx.x) + 164))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1536))] * data_pack_shared[((((int)threadIdx.x) + 168))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1664))] * data_pack_shared[((((int)threadIdx.x) + 168))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1536))] * data_pack_shared[((((int)threadIdx.x) + 172))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1664))] * data_pack_shared[((((int)threadIdx.x) + 172))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1536))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1664))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1536))] * data_pack_shared[((((int)threadIdx.x) + 180))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1664))] * data_pack_shared[((((int)threadIdx.x) + 180))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1536))] * data_pack_shared[((((int)threadIdx.x) + 184))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1664))] * data_pack_shared[((((int)threadIdx.x) + 184))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1536))] * data_pack_shared[((((int)threadIdx.x) + 188))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1664))] * data_pack_shared[((((int)threadIdx.x) + 188))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1536))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1664))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1537))] * data_pack_shared[((((int)threadIdx.x) + 168))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1665))] * data_pack_shared[((((int)threadIdx.x) + 168))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1537))] * data_pack_shared[((((int)threadIdx.x) + 172))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1665))] * data_pack_shared[((((int)threadIdx.x) + 172))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1537))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1665))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1537))] * data_pack_shared[((((int)threadIdx.x) + 180))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1665))] * data_pack_shared[((((int)threadIdx.x) + 180))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1537))] * data_pack_shared[((((int)threadIdx.x) + 184))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1665))] * data_pack_shared[((((int)threadIdx.x) + 184))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1537))] * data_pack_shared[((((int)threadIdx.x) + 188))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1665))] * data_pack_shared[((((int)threadIdx.x) + 188))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1537))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1665))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1538))] * data_pack_shared[((((int)threadIdx.x) + 168))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1666))] * data_pack_shared[((((int)threadIdx.x) + 168))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1538))] * data_pack_shared[((((int)threadIdx.x) + 172))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1666))] * data_pack_shared[((((int)threadIdx.x) + 172))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1538))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1666))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1538))] * data_pack_shared[((((int)threadIdx.x) + 180))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1666))] * data_pack_shared[((((int)threadIdx.x) + 180))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1538))] * data_pack_shared[((((int)threadIdx.x) + 184))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1666))] * data_pack_shared[((((int)threadIdx.x) + 184))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1538))] * data_pack_shared[((((int)threadIdx.x) + 188))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1666))] * data_pack_shared[((((int)threadIdx.x) + 188))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1538))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1666))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1539))] * data_pack_shared[((((int)threadIdx.x) + 168))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1667))] * data_pack_shared[((((int)threadIdx.x) + 168))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1539))] * data_pack_shared[((((int)threadIdx.x) + 172))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1667))] * data_pack_shared[((((int)threadIdx.x) + 172))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1539))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1667))] * data_pack_shared[((((int)threadIdx.x) + 176))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1539))] * data_pack_shared[((((int)threadIdx.x) + 180))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1667))] * data_pack_shared[((((int)threadIdx.x) + 180))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1539))] * data_pack_shared[((((int)threadIdx.x) + 184))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1667))] * data_pack_shared[((((int)threadIdx.x) + 184))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1539))] * data_pack_shared[((((int)threadIdx.x) + 188))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1667))] * data_pack_shared[((((int)threadIdx.x) + 188))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1539))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1667))] * data_pack_shared[((((int)threadIdx.x) + 192))]));
    bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1792))] * data_pack_shared[((((int)threadIdx.x) + 196))]));
    bgemm_local[(28)] = (bgemm_local[(28)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1920))] * data_pack_shared[((((int)threadIdx.x) + 196))]));
    bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1792))] * data_pack_shared[((((int)threadIdx.x) + 200))]));
    bgemm_local[(32)] = (bgemm_local[(32)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1920))] * data_pack_shared[((((int)threadIdx.x) + 200))]));
    bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1792))] * data_pack_shared[((((int)threadIdx.x) + 204))]));
    bgemm_local[(36)] = (bgemm_local[(36)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1920))] * data_pack_shared[((((int)threadIdx.x) + 204))]));
    bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1792))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(40)] = (bgemm_local[(40)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1920))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1792))] * data_pack_shared[((((int)threadIdx.x) + 212))]));
    bgemm_local[(44)] = (bgemm_local[(44)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1920))] * data_pack_shared[((((int)threadIdx.x) + 212))]));
    bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1792))] * data_pack_shared[((((int)threadIdx.x) + 216))]));
    bgemm_local[(48)] = (bgemm_local[(48)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1920))] * data_pack_shared[((((int)threadIdx.x) + 216))]));
    bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1792))] * data_pack_shared[((((int)threadIdx.x) + 220))]));
    bgemm_local[(52)] = (bgemm_local[(52)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1920))] * data_pack_shared[((((int)threadIdx.x) + 220))]));
    bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1793))] * data_pack_shared[((((int)threadIdx.x) + 196))]));
    bgemm_local[(29)] = (bgemm_local[(29)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1921))] * data_pack_shared[((((int)threadIdx.x) + 196))]));
    bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1793))] * data_pack_shared[((((int)threadIdx.x) + 200))]));
    bgemm_local[(33)] = (bgemm_local[(33)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1921))] * data_pack_shared[((((int)threadIdx.x) + 200))]));
    bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1793))] * data_pack_shared[((((int)threadIdx.x) + 204))]));
    bgemm_local[(37)] = (bgemm_local[(37)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1921))] * data_pack_shared[((((int)threadIdx.x) + 204))]));
    bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1793))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(41)] = (bgemm_local[(41)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1921))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1793))] * data_pack_shared[((((int)threadIdx.x) + 212))]));
    bgemm_local[(45)] = (bgemm_local[(45)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1921))] * data_pack_shared[((((int)threadIdx.x) + 212))]));
    bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1793))] * data_pack_shared[((((int)threadIdx.x) + 216))]));
    bgemm_local[(49)] = (bgemm_local[(49)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1921))] * data_pack_shared[((((int)threadIdx.x) + 216))]));
    bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1793))] * data_pack_shared[((((int)threadIdx.x) + 220))]));
    bgemm_local[(53)] = (bgemm_local[(53)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1921))] * data_pack_shared[((((int)threadIdx.x) + 220))]));
    bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1794))] * data_pack_shared[((((int)threadIdx.x) + 196))]));
    bgemm_local[(30)] = (bgemm_local[(30)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1922))] * data_pack_shared[((((int)threadIdx.x) + 196))]));
    bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1794))] * data_pack_shared[((((int)threadIdx.x) + 200))]));
    bgemm_local[(34)] = (bgemm_local[(34)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1922))] * data_pack_shared[((((int)threadIdx.x) + 200))]));
    bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1794))] * data_pack_shared[((((int)threadIdx.x) + 204))]));
    bgemm_local[(38)] = (bgemm_local[(38)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1922))] * data_pack_shared[((((int)threadIdx.x) + 204))]));
    bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1794))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(42)] = (bgemm_local[(42)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1922))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1794))] * data_pack_shared[((((int)threadIdx.x) + 212))]));
    bgemm_local[(46)] = (bgemm_local[(46)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1922))] * data_pack_shared[((((int)threadIdx.x) + 212))]));
    bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1794))] * data_pack_shared[((((int)threadIdx.x) + 216))]));
    bgemm_local[(50)] = (bgemm_local[(50)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1922))] * data_pack_shared[((((int)threadIdx.x) + 216))]));
    bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1794))] * data_pack_shared[((((int)threadIdx.x) + 220))]));
    bgemm_local[(54)] = (bgemm_local[(54)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1922))] * data_pack_shared[((((int)threadIdx.x) + 220))]));
    bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1795))] * data_pack_shared[((((int)threadIdx.x) + 196))]));
    bgemm_local[(31)] = (bgemm_local[(31)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1923))] * data_pack_shared[((((int)threadIdx.x) + 196))]));
    bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1795))] * data_pack_shared[((((int)threadIdx.x) + 200))]));
    bgemm_local[(35)] = (bgemm_local[(35)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1923))] * data_pack_shared[((((int)threadIdx.x) + 200))]));
    bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1795))] * data_pack_shared[((((int)threadIdx.x) + 204))]));
    bgemm_local[(39)] = (bgemm_local[(39)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1923))] * data_pack_shared[((((int)threadIdx.x) + 204))]));
    bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1795))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(43)] = (bgemm_local[(43)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1923))] * data_pack_shared[((((int)threadIdx.x) + 208))]));
    bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1795))] * data_pack_shared[((((int)threadIdx.x) + 212))]));
    bgemm_local[(47)] = (bgemm_local[(47)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1923))] * data_pack_shared[((((int)threadIdx.x) + 212))]));
    bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1795))] * data_pack_shared[((((int)threadIdx.x) + 216))]));
    bgemm_local[(51)] = (bgemm_local[(51)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1923))] * data_pack_shared[((((int)threadIdx.x) + 216))]));
    bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1795))] * data_pack_shared[((((int)threadIdx.x) + 220))]));
    bgemm_local[(55)] = (bgemm_local[(55)] + (placeholder_shared[(((((int)threadIdx.y) * 4) + 1923))] * data_pack_shared[((((int)threadIdx.x) + 220))]));
  }
  bgemm[((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)))] = bgemm_local[(0)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25088))] = bgemm_local[(28)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 4))] = bgemm_local[(4)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25092))] = bgemm_local[(32)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 8))] = bgemm_local[(8)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25096))] = bgemm_local[(36)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 12))] = bgemm_local[(12)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25100))] = bgemm_local[(40)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 16))] = bgemm_local[(16)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25104))] = bgemm_local[(44)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 20))] = bgemm_local[(20)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25108))] = bgemm_local[(48)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 24))] = bgemm_local[(24)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25112))] = bgemm_local[(52)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 196))] = bgemm_local[(1)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25284))] = bgemm_local[(29)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 200))] = bgemm_local[(5)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25288))] = bgemm_local[(33)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 204))] = bgemm_local[(9)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25292))] = bgemm_local[(37)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 208))] = bgemm_local[(13)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25296))] = bgemm_local[(41)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 212))] = bgemm_local[(17)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25300))] = bgemm_local[(45)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 216))] = bgemm_local[(21)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25304))] = bgemm_local[(49)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 220))] = bgemm_local[(25)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25308))] = bgemm_local[(53)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 392))] = bgemm_local[(2)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25480))] = bgemm_local[(30)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 396))] = bgemm_local[(6)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25484))] = bgemm_local[(34)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 400))] = bgemm_local[(10)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25488))] = bgemm_local[(38)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 404))] = bgemm_local[(14)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25492))] = bgemm_local[(42)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 408))] = bgemm_local[(18)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25496))] = bgemm_local[(46)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 412))] = bgemm_local[(22)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25500))] = bgemm_local[(50)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 416))] = bgemm_local[(26)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25504))] = bgemm_local[(54)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 588))] = bgemm_local[(3)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25676))] = bgemm_local[(31)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 592))] = bgemm_local[(7)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25680))] = bgemm_local[(35)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 596))] = bgemm_local[(11)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25684))] = bgemm_local[(39)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 600))] = bgemm_local[(15)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25688))] = bgemm_local[(43)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 604))] = bgemm_local[(19)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25692))] = bgemm_local[(47)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 608))] = bgemm_local[(23)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25696))] = bgemm_local[(51)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 612))] = bgemm_local[(27)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 50176)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 25700))] = bgemm_local[(55)];
}

extern "C" __global__ void fused_nn_batch_flatten_kernel0(float* __restrict__ tensor, float* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 25088) {
    tensor[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))];
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5_kernel0(float* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[36];
  float data_pack_local[36];
  for (int eps = 0; eps < 6; ++eps) {
    for (int nu = 0; nu < 6; ++nu) {
      d[(((eps * 6) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 784) / 28) * 4) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 784) / 28) * 4) + eps) < 113)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 28) * 4) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 28) * 4) + nu) < 113)) ? placeholder[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 28) * 448) + (eps * 112)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 28) * 4)) + nu) - 113))] : 0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(1)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(3)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(4)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(6)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(7)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(8)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(9)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(12)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(13)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(14)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(15)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(18)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(19)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(20)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(21)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(24)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(28)]);
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(1)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(2)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(3)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(4)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(8)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(14)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(15)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(20)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(21)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(25)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(28)]);
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(2)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(3)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(4)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(7)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(8)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(9)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(13)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(14)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(15)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(19)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(20)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(21)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(28)]);
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(3)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(4)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(7)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(13)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(15)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(19)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(21)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(28)]);
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(1)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(3)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(4)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(7)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(9)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(13)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(15)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(19)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(21)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(28)]);
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(1)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(2)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(3)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(4)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(5)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(8)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(9)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(10)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(11)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(14)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(15)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(16)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(17)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(20)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(21)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(22)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(23)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(25)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(29)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(6)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(12)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(13)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(14)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(15)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(18)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(19)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(20)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(21)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(24)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(28)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(7)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(10)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(14)] * -2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(15)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(20)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(21)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(25)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(28)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(10)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(13)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(14)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(15)] * -2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(19)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(20)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(21)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(28)]);
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(13)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(15)] * -2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(19)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(21)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(28)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(13)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(15)] * -2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(19)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(21)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(28)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(14)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(15)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(16)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(17)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(20)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(21)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(22)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(23)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(25)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(29)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(7)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(8)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(9)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(12)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(13)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(14)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(15)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(18)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(19)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(20)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(21)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(24)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(28)]);
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(8)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(9)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(14)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(15)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(20)] * 2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(21)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(25)]);
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(28)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(7)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(8)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(9)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(13)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(14)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(15)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(19)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(20)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(21)] * 2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(28)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(7)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(9)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(13)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(15)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(19)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(21)] * 2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(28)]);
  data_pack_local[(16)] = 0.000000e+00f;
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(7)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(9)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(13)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(15)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(19)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(21)] * 2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + d[(28)]);
  data_pack_local[(17)] = 0.000000e+00f;
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(8)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(9)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(10)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(14)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(15)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(16)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(17)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(20)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(21)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(22)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(23)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(25)]);
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(29)]);
  data_pack_local[(18)] = 0.000000e+00f;
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(6)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(7)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(8)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(9)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(18)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(19)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(20)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(21)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(24)]);
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(28)]);
  data_pack_local[(19)] = 0.000000e+00f;
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(8)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(9)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(20)] * 2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(21)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(25)]);
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(28)]);
  data_pack_local[(20)] = 0.000000e+00f;
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(7)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(8)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(9)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(19)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(20)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(21)] * 2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + d[(28)]);
  data_pack_local[(21)] = 0.000000e+00f;
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(7)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(9)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(19)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(21)] * 2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + d[(28)]);
  data_pack_local[(22)] = 0.000000e+00f;
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(7)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(9)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(19)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(21)] * 2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + d[(28)]);
  data_pack_local[(23)] = 0.000000e+00f;
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(8)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(9)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(10)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(11)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(20)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(21)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(22)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(23)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(25)]);
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(29)]);
  data_pack_local[(24)] = 0.000000e+00f;
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(6)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(7)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(8)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(9)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(18)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(19)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(20)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(21)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(24)]);
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(28)]);
  data_pack_local[(25)] = 0.000000e+00f;
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(8)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(9)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(20)] * -5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(21)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(25)]);
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(28)]);
  data_pack_local[(26)] = 0.000000e+00f;
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(7)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(8)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(9)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(19)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(20)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(21)] * -5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + d[(28)]);
  data_pack_local[(27)] = 0.000000e+00f;
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(7)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(9)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(19)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(21)] * -5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + d[(28)]);
  data_pack_local[(28)] = 0.000000e+00f;
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(7)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(9)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(19)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(21)] * -5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + d[(28)]);
  data_pack_local[(29)] = 0.000000e+00f;
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(8)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(9)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(10)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(11)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(20)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(21)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(22)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(23)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(25)]);
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(29)]);
  data_pack_local[(30)] = 0.000000e+00f;
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(6)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(10)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(12)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(13)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(14)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(15)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(18)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(19)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(20)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(21)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(24)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(25)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(26)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(27)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(30)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(31)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(32)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(33)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(34)]);
  data_pack_local[(31)] = 0.000000e+00f;
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(7)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(10)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(14)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(15)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(20)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(21)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(26)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(27)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(31)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(32)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(33)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(34)]);
  data_pack_local[(32)] = 0.000000e+00f;
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(10)]);
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(13)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(14)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(15)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(19)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(20)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(21)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(25)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(26)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(27)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(31)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(32)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(33)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(34)]);
  data_pack_local[(33)] = 0.000000e+00f;
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(10)]);
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(13)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(15)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(19)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(21)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(25)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(27)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(31)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(33)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(34)]);
  data_pack_local[(34)] = 0.000000e+00f;
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(10)]);
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(13)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(15)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(19)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(21)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(25)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(27)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(31)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(33)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(34)]);
  data_pack_local[(35)] = 0.000000e+00f;
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(7)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(11)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(14)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(15)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(16)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(17)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(20)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(21)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(22)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(23)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(26)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(27)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(28)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(29)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(31)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(32)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(33)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(34)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(35)]);
  for (int eps1 = 0; eps1 < 6; ++eps1) {
    for (int nu1 = 0; nu1 < 6; ++nu1) {
      data_pack[(((((eps1 * 602112) + (nu1 * 100352)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 6) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1(float* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[28];
  __shared__ float placeholder_shared[1024];
  __shared__ float data_pack_shared[224];
  bgemm_local[(0)] = 0.000000e+00f;
  bgemm_local[(4)] = 0.000000e+00f;
  bgemm_local[(8)] = 0.000000e+00f;
  bgemm_local[(12)] = 0.000000e+00f;
  bgemm_local[(16)] = 0.000000e+00f;
  bgemm_local[(20)] = 0.000000e+00f;
  bgemm_local[(24)] = 0.000000e+00f;
  bgemm_local[(1)] = 0.000000e+00f;
  bgemm_local[(5)] = 0.000000e+00f;
  bgemm_local[(9)] = 0.000000e+00f;
  bgemm_local[(13)] = 0.000000e+00f;
  bgemm_local[(17)] = 0.000000e+00f;
  bgemm_local[(21)] = 0.000000e+00f;
  bgemm_local[(25)] = 0.000000e+00f;
  bgemm_local[(2)] = 0.000000e+00f;
  bgemm_local[(6)] = 0.000000e+00f;
  bgemm_local[(10)] = 0.000000e+00f;
  bgemm_local[(14)] = 0.000000e+00f;
  bgemm_local[(18)] = 0.000000e+00f;
  bgemm_local[(22)] = 0.000000e+00f;
  bgemm_local[(26)] = 0.000000e+00f;
  bgemm_local[(3)] = 0.000000e+00f;
  bgemm_local[(7)] = 0.000000e+00f;
  bgemm_local[(11)] = 0.000000e+00f;
  bgemm_local[(15)] = 0.000000e+00f;
  bgemm_local[(19)] = 0.000000e+00f;
  bgemm_local[(23)] = 0.000000e+00f;
  bgemm_local[(27)] = 0.000000e+00f;
  for (int ci_outer = 0; ci_outer < 32; ++ci_outer) {
    __syncthreads();
    placeholder_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)))] = placeholder[((((((((int)blockIdx.z) * 131072) + (ci_outer * 4096)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128))] = placeholder[(((((((((int)blockIdx.z) * 131072) + (ci_outer * 4096)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 512))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 256))] = placeholder[(((((((((int)blockIdx.z) * 131072) + (ci_outer * 4096)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 1024))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 384))] = placeholder[(((((((((int)blockIdx.z) * 131072) + (ci_outer * 4096)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 1536))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 512))] = placeholder[(((((((((int)blockIdx.z) * 131072) + (ci_outer * 4096)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 2048))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 640))] = placeholder[(((((((((int)blockIdx.z) * 131072) + (ci_outer * 4096)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 2560))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 768))] = placeholder[(((((((((int)blockIdx.z) * 131072) + (ci_outer * 4096)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 3072))];
    placeholder_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 896))] = placeholder[(((((((((int)blockIdx.z) * 131072) + (ci_outer * 4096)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 3584))];
    data_pack_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 1568)) + ((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) / 28) * 196)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) % 28)))];
    if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 96) {
      if (((int)threadIdx.y) < 24) {
        data_pack_shared[((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 1568)) + (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 128) / 28) * 196)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16) % 28)))];
      }
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 8; ++ci_inner) {
      bgemm_local[(0)] = (bgemm_local[(0)] + (placeholder_shared[(((ci_inner * 128) + (((int)threadIdx.y) * 4)))] * data_pack_shared[(((ci_inner * 28) + ((int)threadIdx.x)))]));
      bgemm_local[(4)] = (bgemm_local[(4)] + (placeholder_shared[(((ci_inner * 128) + (((int)threadIdx.y) * 4)))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 4))]));
      bgemm_local[(8)] = (bgemm_local[(8)] + (placeholder_shared[(((ci_inner * 128) + (((int)threadIdx.y) * 4)))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 8))]));
      bgemm_local[(12)] = (bgemm_local[(12)] + (placeholder_shared[(((ci_inner * 128) + (((int)threadIdx.y) * 4)))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 12))]));
      bgemm_local[(16)] = (bgemm_local[(16)] + (placeholder_shared[(((ci_inner * 128) + (((int)threadIdx.y) * 4)))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(20)] = (bgemm_local[(20)] + (placeholder_shared[(((ci_inner * 128) + (((int)threadIdx.y) * 4)))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 20))]));
      bgemm_local[(24)] = (bgemm_local[(24)] + (placeholder_shared[(((ci_inner * 128) + (((int)threadIdx.y) * 4)))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 24))]));
      bgemm_local[(1)] = (bgemm_local[(1)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 1))] * data_pack_shared[(((ci_inner * 28) + ((int)threadIdx.x)))]));
      bgemm_local[(5)] = (bgemm_local[(5)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 1))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 4))]));
      bgemm_local[(9)] = (bgemm_local[(9)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 1))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 8))]));
      bgemm_local[(13)] = (bgemm_local[(13)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 1))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 12))]));
      bgemm_local[(17)] = (bgemm_local[(17)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 1))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(21)] = (bgemm_local[(21)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 1))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 20))]));
      bgemm_local[(25)] = (bgemm_local[(25)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 1))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 24))]));
      bgemm_local[(2)] = (bgemm_local[(2)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 2))] * data_pack_shared[(((ci_inner * 28) + ((int)threadIdx.x)))]));
      bgemm_local[(6)] = (bgemm_local[(6)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 2))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 4))]));
      bgemm_local[(10)] = (bgemm_local[(10)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 2))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 8))]));
      bgemm_local[(14)] = (bgemm_local[(14)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 2))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 12))]));
      bgemm_local[(18)] = (bgemm_local[(18)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 2))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(22)] = (bgemm_local[(22)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 2))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 20))]));
      bgemm_local[(26)] = (bgemm_local[(26)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 2))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 24))]));
      bgemm_local[(3)] = (bgemm_local[(3)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 3))] * data_pack_shared[(((ci_inner * 28) + ((int)threadIdx.x)))]));
      bgemm_local[(7)] = (bgemm_local[(7)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 3))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 4))]));
      bgemm_local[(11)] = (bgemm_local[(11)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 3))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 8))]));
      bgemm_local[(15)] = (bgemm_local[(15)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 3))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 12))]));
      bgemm_local[(19)] = (bgemm_local[(19)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 3))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 16))]));
      bgemm_local[(23)] = (bgemm_local[(23)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 3))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 20))]));
      bgemm_local[(27)] = (bgemm_local[(27)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + 3))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 24))]));
    }
  }
  bgemm[((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)))] = bgemm_local[(0)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 4))] = bgemm_local[(4)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 8))] = bgemm_local[(8)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 12))] = bgemm_local[(12)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 16))] = bgemm_local[(16)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 20))] = bgemm_local[(20)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 24))] = bgemm_local[(24)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 196))] = bgemm_local[(1)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 200))] = bgemm_local[(5)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 204))] = bgemm_local[(9)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 208))] = bgemm_local[(13)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 212))] = bgemm_local[(17)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 216))] = bgemm_local[(21)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 220))] = bgemm_local[(25)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 392))] = bgemm_local[(2)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 396))] = bgemm_local[(6)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 400))] = bgemm_local[(10)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 404))] = bgemm_local[(14)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 408))] = bgemm_local[(18)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 412))] = bgemm_local[(22)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 416))] = bgemm_local[(26)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 588))] = bgemm_local[(3)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 592))] = bgemm_local[(7)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 596))] = bgemm_local[(11)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 600))] = bgemm_local[(15)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 604))] = bgemm_local[(19)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 608))] = bgemm_local[(23)];
  bgemm[(((((((((int)blockIdx.z) * 100352) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 612))] = bgemm_local[(27)];
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2(float* __restrict__ bgemm, float* __restrict__ T_relu, float* __restrict__ placeholder) {
  float inverse[16];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((int)blockIdx.x) * 128) + ((int)threadIdx.x)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f));
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f));
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 50176))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 100352))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 150528))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 200704))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 250880))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 551936))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 852992))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1154048))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1455104))]);
  inverse[(4)] = 0.000000e+00f;
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))]);
  inverse[(4)] = (inverse[(4)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f));
  inverse[(5)] = 0.000000e+00f;
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 5.000000e-01f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -2.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f) * -2.000000e+00f));
  inverse[(6)] = 0.000000e+00f;
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(6)] = (inverse[(6)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 5.000000e-01f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -2.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f) * 4.000000e+00f));
  inverse[(7)] = 0.000000e+00f;
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 551936))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 852992))]);
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 5.000000e-01f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 5.000000e-01f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1154048))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -2.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -2.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -2.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1455104))] * -2.000000e+00f));
  inverse[(8)] = 0.000000e+00f;
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))]);
  inverse[(8)] = (inverse[(8)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f));
  inverse[(9)] = 0.000000e+00f;
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 2.500000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 2.500000e-01f) * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * 4.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 4.000000e+00f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f) * -2.000000e+00f));
  inverse[(10)] = 0.000000e+00f;
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(10)] = (inverse[(10)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 2.500000e-01f) * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 4.000000e+00f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f) * 4.000000e+00f));
  inverse[(11)] = 0.000000e+00f;
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 551936))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 852992))]);
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 2.500000e-01f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 2.500000e-01f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1154048))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * 4.000000e+00f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * 4.000000e+00f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * 4.000000e+00f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1455104))] * 4.000000e+00f));
  inverse[(12)] = 0.000000e+00f;
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 301056))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 602112))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))]);
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 903168))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1204224))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1505280))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1555456))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1655808))]);
  inverse[(12)] = (inverse[(12)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))]);
  inverse[(13)] = 0.000000e+00f;
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 1.250000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 1.250000e-01f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -8.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -8.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1555456))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1655808))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))] * -2.000000e+00f));
  inverse[(14)] = 0.000000e+00f;
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 1.250000e-01f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -8.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1555456))]);
  inverse[(14)] = (inverse[(14)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1655808))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))] * 4.000000e+00f));
  inverse[(15)] = 0.000000e+00f;
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 351232))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 401408))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 451584))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 501760))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 551936))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 652288))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 702464))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 752640))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 802816))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 852992))]);
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 953344))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1003520))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1053696))] * 1.250000e-01f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1103872))] * 1.250000e-01f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1154048))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1254400))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1304576))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1354752))] * -8.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1404928))] * -8.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1455104))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1555456))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1605632))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1655808))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1705984))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) + 1756160))]);
  for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      T_relu[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 224) + (ax2_inner * 56)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4)) + ax3_inner))] = max((inverse[(((ax2_inner * 4) + ax3_inner))] + placeholder[((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 196))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1(float* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[28];
  __shared__ float placeholder_shared[512];
  __shared__ float data_pack_shared[112];
  #pragma unroll
  for (int co_c_init = 0; co_c_init < 4; ++co_c_init) {
    bgemm_local[(co_c_init)] = 0.000000e+00f;
    bgemm_local[((co_c_init + 4))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 8))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 12))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 16))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 20))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 24))] = 0.000000e+00f;
  }
  for (int ci_outer = 0; ci_outer < 64; ++ci_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder[(((((((((int)blockIdx.z) * 65536) + (ci_outer * 1024)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
    if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 112) {
      if (((int)threadIdx.y) < 28) {
        data_pack_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 50176) + (ci_outer * 784)) + ((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) / 28) * 196)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) % 28)))];
      }
    }
    __syncthreads();
    #pragma unroll
    for (int ci_inner = 0; ci_inner < 4; ++ci_inner) {
      #pragma unroll
      for (int co_c = 0; co_c < 4; ++co_c) {
        bgemm_local[(co_c)] = (bgemm_local[(co_c)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[(((ci_inner * 28) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 4))] = (bgemm_local[((co_c + 4))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 4))]));
        bgemm_local[((co_c + 8))] = (bgemm_local[((co_c + 8))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 8))]));
        bgemm_local[((co_c + 12))] = (bgemm_local[((co_c + 12))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 12))]));
        bgemm_local[((co_c + 16))] = (bgemm_local[((co_c + 16))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 20))] = (bgemm_local[((co_c + 20))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 20))]));
        bgemm_local[((co_c + 24))] = (bgemm_local[((co_c + 24))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 28) + ((int)threadIdx.x)) + 24))]));
      }
    }
  }
  #pragma unroll
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 4; ++co_inner_inner_inner) {
    bgemm[(((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)))] = bgemm_local[(co_inner_inner_inner)];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 4))] = bgemm_local[((co_inner_inner_inner + 4))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 8))] = bgemm_local[((co_inner_inner_inner + 8))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 12))] = bgemm_local[((co_inner_inner_inner + 12))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 16))] = bgemm_local[((co_inner_inner_inner + 16))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 20))] = bgemm_local[((co_inner_inner_inner + 20))];
    bgemm[((((((((((int)blockIdx.z) * 50176) + (((int)blockIdx.y) * 25088)) + (((int)threadIdx.y) * 784)) + (co_inner_inner_inner * 196)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 24))] = bgemm_local[((co_inner_inner_inner + 24))];
  }
}

